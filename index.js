import t from "readline"; import e from "events"; var i, s, r, n, o, h, l, u, a, d, c, p, f, g, m, v, b, w, y, x, S, M, O, T, C, P, $, k, D, I, j, A, E, _, R, F, V, Y, H, L, N, U, J, B, z, W, Z, q, G, K, Q, X, tt, et, it, st, rt, nt, ot, ht, lt, ut, at, dt, ct, pt, ft, gt = {}; function mt() { if (s) return i; s = 1; const { FORCE_COLOR: t, NODE_DISABLE_COLORS: e, TERM: r } = process.env, n = { enabled: !e && "dumb" !== r && "0" !== t, reset: h(0, 0), bold: h(1, 22), dim: h(2, 22), italic: h(3, 23), underline: h(4, 24), inverse: h(7, 27), hidden: h(8, 28), strikethrough: h(9, 29), black: h(30, 39), red: h(31, 39), green: h(32, 39), yellow: h(33, 39), blue: h(34, 39), magenta: h(35, 39), cyan: h(36, 39), white: h(37, 39), gray: h(90, 39), grey: h(90, 39), bgBlack: h(40, 49), bgRed: h(41, 49), bgGreen: h(42, 49), bgYellow: h(43, 49), bgBlue: h(44, 49), bgMagenta: h(45, 49), bgCyan: h(46, 49), bgWhite: h(47, 49) }; function o(t, e) { let i, s = 0, r = "", n = ""; for (; s < t.length; s++)i = t[s], r += i.open, n += i.close, e.includes(i.close) && (e = e.replace(i.rgx, i.close + i.open)); return r + e + n; } function h(t, e) { let i = { open: `[${t}m`, close: `[${e}m`, rgx: new RegExp(`\\x1b\\[${e}m`, "g") }; return function (e) { return void 0 !== this && void 0 !== this.has ? (this.has.includes(t) || (this.has.push(t), this.keys.push(i)), void 0 === e ? this : n.enabled ? o(this.keys, e + "") : e + "") : void 0 === e ? function (t, e) { let i = { has: t, keys: e }; return i.reset = n.reset.bind(i), i.bold = n.bold.bind(i), i.dim = n.dim.bind(i), i.italic = n.italic.bind(i), i.underline = n.underline.bind(i), i.inverse = n.inverse.bind(i), i.hidden = n.hidden.bind(i), i.strikethrough = n.strikethrough.bind(i), i.black = n.black.bind(i), i.red = n.red.bind(i), i.green = n.green.bind(i), i.yellow = n.yellow.bind(i), i.blue = n.blue.bind(i), i.magenta = n.magenta.bind(i), i.cyan = n.cyan.bind(i), i.white = n.white.bind(i), i.gray = n.gray.bind(i), i.grey = n.grey.bind(i), i.bgBlack = n.bgBlack.bind(i), i.bgRed = n.bgRed.bind(i), i.bgGreen = n.bgGreen.bind(i), i.bgYellow = n.bgYellow.bind(i), i.bgBlue = n.bgBlue.bind(i), i.bgMagenta = n.bgMagenta.bind(i), i.bgCyan = n.bgCyan.bind(i), i.bgWhite = n.bgWhite.bind(i), i; }([t], [i]) : n.enabled ? o([i], e + "") : e + ""; }; } return i = n; } function vt() { return h ? o : (h = 1, o = t => { const e = ["[\\u001B\\u009B][[\\]()#;?]*(?:(?:(?:(?:;[-a-zA-Z\\d\\/#&.:=?%@~_]+)*|[a-zA-Z\\d]+(?:;[-a-zA-Z\\d\\/#&.:=?%@~_]*)*)?\\u0007)", "(?:(?:\\d{1,4}(?:;\\d{0,4})*)?[\\dA-PRZcf-ntqry=><~]))"].join("|"), i = new RegExp(e, "g"); return "string" == typeof t ? t.replace(i, "") : t; }); } function bt() { if (u) return l; u = 1; const t = { to: (t, e) => e ? `[${e + 1};${t + 1}H` : `[${t + 1}G`, move(t, e) { let i = ""; return t < 0 ? i += `[${-t}D` : t > 0 && (i += `[${t}C`), e < 0 ? i += `[${-e}A` : e > 0 && (i += `[${e}B`), i; }, up: (t = 1) => `[${t}A`, down: (t = 1) => `[${t}B`, forward: (t = 1) => `[${t}C`, backward: (t = 1) => `[${t}D`, nextLine: (t = 1) => "[E".repeat(t), prevLine: (t = 1) => "[F".repeat(t), left: "[G", hide: "[?25l", show: "[?25h", save: "7", restore: "8" }, e = { screen: "[2J", up: (t = 1) => "[1J".repeat(t), down: (t = 1) => "[J".repeat(t), line: "[2K", lineEnd: "[K", lineStart: "[1K", lines(e) { let i = ""; for (let s = 0; s < e; s++)i += this.line + (s < e - 1 ? t.up() : ""); return e && (i += t.left), i; } }; return l = { cursor: t, scroll: { up: (t = 1) => "[S".repeat(t), down: (t = 1) => "[T".repeat(t) }, erase: e, beep: "" }; } function wt() { if (d) return a; function t(t, i) { var s = "undefined" != typeof Symbol && t[Symbol.iterator] || t["@@iterator"]; if (!s) { if (Array.isArray(t) || (s = function (t, i) { if (!t) return; if ("string" == typeof t) return e(t, i); var s = Object.prototype.toString.call(t).slice(8, -1); "Object" === s && t.constructor && (s = t.constructor.name); if ("Map" === s || "Set" === s) return Array.from(t); if ("Arguments" === s || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(s)) return e(t, i); }(t)) || i && t && "number" == typeof t.length) { s && (t = s); var r = 0, n = function () { }; return { s: n, n: function () { return r >= t.length ? { done: !0 } : { done: !1, value: t[r++] }; }, e: function (t) { throw t; }, f: n }; } throw new TypeError("Invalid attempt to iterate non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method."); } var o, h = !0, l = !1; return { s: function () { s = s.call(t); }, n: function () { var t = s.next(); return h = t.done, t; }, e: function (t) { l = !0, o = t; }, f: function () { try { h || null == s.return || s.return(); } finally { if (l) throw o; } } }; } function e(t, e) { (null == e || e > t.length) && (e = t.length); for (var i = 0, s = new Array(e); i < e; i++)s[i] = t[i]; return s; } d = 1; const i = vt(), s = bt(), r = s.erase, n = s.cursor; return a = function (e, s) { if (!s) return r.line + n.to(0); let o = 0; var h, l = t(e.split(/\r?\n/)); try { for (l.s(); !(h = l.n()).done;) { let t = h.value; o += 1 + Math.floor(Math.max([...i(t)].length - 1, 0) / s); } } catch (t) { l.e(t); } finally { l.f(); } return r.lines(o); }, a; } function yt() { if (p) return c; p = 1; const t = { arrowUp: "↑", arrowDown: "↓", arrowLeft: "←", arrowRight: "→", radioOn: "◉", radioOff: "◯", tick: "✔", cross: "✖", ellipsis: "…", pointerSmall: "›", line: "─", pointer: "❯" }, e = { arrowUp: t.arrowUp, arrowDown: t.arrowDown, arrowLeft: t.arrowLeft, arrowRight: t.arrowRight, radioOn: "(*)", radioOff: "( )", tick: "√", cross: "×", ellipsis: "...", pointerSmall: "»", line: "─", pointer: ">" }, i = "win32" === process.platform ? e : t; return c = i; } function xt() { if (g) return f; g = 1; const t = mt(), e = yt(), i = Object.freeze({ password: { scale: 1, render: t => "*".repeat(t.length) }, emoji: { scale: 2, render: t => "😃".repeat(t.length) }, invisible: { scale: 0, render: t => "" }, default: { scale: 1, render: t => `${t}` } }), s = Object.freeze({ aborted: t.red(e.cross), done: t.green(e.tick), exited: t.yellow(e.cross), default: t.cyan("?") }); return f = { styles: i, render: t => i[t] || i.default, symbols: s, symbol: (t, e, i) => e ? s.aborted : i ? s.exited : t ? s.done : s.default, delimiter: i => t.gray(i ? e.ellipsis : e.pointerSmall), item: (i, s) => t.gray(i ? s ? e.pointerSmall : "+" : e.line) }; } function St() { if (v) return m; v = 1; const t = vt(); return m = function (e, i) { let s = String(t(e) || "").split(/\r?\n/); return i ? s.map((t => Math.ceil(t.length / i))).reduce(((t, e) => t + e)) : s.length; }, m; } function Mt() { return M ? S : (M = 1, S = { action: n ? r : (n = 1, r = (t, e) => { if (!t.meta || "escape" === t.name) { if (t.ctrl) { if ("a" === t.name) return "first"; if ("c" === t.name) return "abort"; if ("d" === t.name) return "abort"; if ("e" === t.name) return "last"; if ("g" === t.name) return "reset"; } if (e) { if ("j" === t.name) return "down"; if ("k" === t.name) return "up"; } return "return" === t.name || "enter" === t.name ? "submit" : "backspace" === t.name ? "delete" : "delete" === t.name ? "deleteForward" : "abort" === t.name ? "abort" : "escape" === t.name ? "exit" : "tab" === t.name ? "next" : "pagedown" === t.name ? "nextPage" : "pageup" === t.name ? "prevPage" : "home" === t.name ? "home" : "end" === t.name ? "end" : "up" === t.name ? "up" : "down" === t.name ? "down" : "right" === t.name ? "right" : "left" === t.name && "left"; } }), clear: wt(), style: xt(), strip: vt(), figures: yt(), lines: St(), wrap: w ? b : (w = 1, b = (t, e = {}) => { const i = Number.isSafeInteger(parseInt(e.margin)) ? new Array(parseInt(e.margin)).fill(" ").join("") : e.margin || "", s = e.width; return (t || "").split(/\r?\n/g).map((t => t.split(/\s+/g).reduce(((t, e) => (e.length + i.length >= s || t[t.length - 1].length + e.length + 1 < s ? t[t.length - 1] += ` ${e}` : t.push(`${i}${e}`), t)), [i]).join("\n"))).join("\n"); }), entriesToDisplay: x ? y : (x = 1, y = (t, e, i) => { i = i || e; let s = Math.min(e - i, t - Math.floor(i / 2)); return s < 0 && (s = 0), { startIndex: s, endIndex: Math.min(s + i, e) }; }) }); } function Ot() { if (T) return O; T = 1; const i = t, s = Mt().action, r = e, n = bt(), o = n.beep, h = n.cursor, l = mt(); return O = class extends r { constructor(t = {}) { super(), this.firstRender = !0, this.in = t.stdin || process.stdin, this.out = t.stdout || process.stdout, this.onRender = (t.onRender || (() => { })).bind(this); const e = i.createInterface({ input: this.in, escapeCodeTimeout: 50 }); i.emitKeypressEvents(this.in, e), this.in.isTTY && this.in.setRawMode(!0); const r = ["SelectPrompt", "MultiselectPrompt"].indexOf(this.constructor.name) > -1, n = (t, e) => { let i = s(e, r); !1 === i ? this._ && this._(t, e) : "function" == typeof this[i] ? this[i](e) : this.bell(); }; this.close = () => { this.out.write(h.show), this.in.removeListener("keypress", n), this.in.isTTY && this.in.setRawMode(!1), e.close(), this.emit(this.aborted ? "abort" : this.exited ? "exit" : "submit", this.value), this.closed = !0; }, this.in.on("keypress", n); } fire() { this.emit("state", { value: this.value, aborted: !!this.aborted, exited: !!this.exited }); } bell() { this.out.write(o); } render() { this.onRender(l), this.firstRender && (this.firstRender = !1); } }; } function Tt() { if (P) return C; function t(t, e, i, s, r, n, o) { try { var h = t[n](o), l = h.value; } catch (t) { return void i(t); } h.done ? e(l) : Promise.resolve(l).then(s, r); } function e(e) { return function () { var i = this, s = arguments; return new Promise((function (r, n) { var o = e.apply(i, s); function h(e) { t(o, r, n, h, l, "next", e); } function l(e) { t(o, r, n, h, l, "throw", e); } h(void 0); })); }; } P = 1; const i = mt(), s = Ot(), r = bt(), n = r.erase, o = r.cursor, h = Mt(), l = h.style, u = h.clear, a = h.lines, d = h.figures; return C = class extends s { constructor(t = {}) { super(t), this.transform = l.render(t.style), this.scale = this.transform.scale, this.msg = t.message, this.initial = t.initial || "", this.validator = t.validate || (() => !0), this.value = "", this.errorMsg = t.error || "Please Enter A Valid Value", this.cursor = Number(!!this.initial), this.cursorOffset = 0, this.clear = u("", this.out.columns), this.render(); } set value(t) { !t && this.initial ? (this.placeholder = !0, this.rendered = i.gray(this.transform.render(this.initial))) : (this.placeholder = !1, this.rendered = this.transform.render(t)), this._value = t, this.fire(); } get value() { return this._value; } reset() { this.value = "", this.cursor = Number(!!this.initial), this.cursorOffset = 0, this.fire(), this.render(); } exit() { this.abort(); } abort() { this.value = this.value || this.initial, this.done = this.aborted = !0, this.error = !1, this.red = !1, this.fire(), this.render(), this.out.write("\n"), this.close(); } validate() { var t = this; return e((function* () { let e = yield t.validator(t.value); "string" == typeof e && (t.errorMsg = e, e = !1), t.error = !e; }))(); } submit() { var t = this; return e((function* () { if (t.value = t.value || t.initial, t.cursorOffset = 0, t.cursor = t.rendered.length, yield t.validate(), t.error) return t.red = !0, t.fire(), void t.render(); t.done = !0, t.aborted = !1, t.fire(), t.render(), t.out.write("\n"), t.close(); }))(); } next() { if (!this.placeholder) return this.bell(); this.value = this.initial, this.cursor = this.rendered.length, this.fire(), this.render(); } moveCursor(t) { this.placeholder || (this.cursor = this.cursor + t, this.cursorOffset += t); } _(t, e) { let i = this.value.slice(0, this.cursor), s = this.value.slice(this.cursor); this.value = `${i}${t}${s}`, this.red = !1, this.cursor = this.placeholder ? 0 : i.length + 1, this.render(); } delete() { if (this.isCursorAtStart()) return this.bell(); let t = this.value.slice(0, this.cursor - 1), e = this.value.slice(this.cursor); this.value = `${t}${e}`, this.red = !1, this.isCursorAtStart() ? this.cursorOffset = 0 : (this.cursorOffset++, this.moveCursor(-1)), this.render(); } deleteForward() { if (this.cursor * this.scale >= this.rendered.length || this.placeholder) return this.bell(); let t = this.value.slice(0, this.cursor), e = this.value.slice(this.cursor + 1); this.value = `${t}${e}`, this.red = !1, this.isCursorAtEnd() ? this.cursorOffset = 0 : this.cursorOffset++, this.render(); } first() { this.cursor = 0, this.render(); } last() { this.cursor = this.value.length, this.render(); } left() { if (this.cursor <= 0 || this.placeholder) return this.bell(); this.moveCursor(-1), this.render(); } right() { if (this.cursor * this.scale >= this.rendered.length || this.placeholder) return this.bell(); this.moveCursor(1), this.render(); } isCursorAtStart() { return 0 === this.cursor || this.placeholder && 1 === this.cursor; } isCursorAtEnd() { return this.cursor === this.rendered.length || this.placeholder && this.cursor === this.rendered.length + 1; } render() { this.closed || (this.firstRender || (this.outputError && this.out.write(o.down(a(this.outputError, this.out.columns) - 1) + u(this.outputError, this.out.columns)), this.out.write(u(this.outputText, this.out.columns))), super.render(), this.outputError = "", this.outputText = [l.symbol(this.done, this.aborted), i.bold(this.msg), l.delimiter(this.done), this.red ? i.red(this.rendered) : this.rendered].join(" "), this.error && (this.outputError += this.errorMsg.split("\n").reduce(((t, e, s) => t + `\n${s ? " " : d.pointerSmall} ${i.red().italic(e)}`), "")), this.out.write(n.line + o.to(0) + this.outputText + o.save + this.outputError + o.restore + o.move(this.cursorOffset, 0))); } }; } function Ct() { if (k) return $; k = 1; const t = mt(), e = Ot(), i = Mt(), s = i.style, r = i.clear, n = i.figures, o = i.wrap, h = i.entriesToDisplay, l = bt().cursor; return $ = class extends e { constructor(t = {}) { super(t), this.msg = t.message, this.hint = t.hint || "- Use arrow-keys. Return to submit.", this.warn = t.warn || "- This option is disabled", this.cursor = t.initial || 0, this.choices = t.choices.map(((t, e) => ("string" == typeof t && (t = { title: t, value: e }), { title: t && (t.title || t.value || t), value: t && (void 0 === t.value ? e : t.value), description: t && t.description, selected: t && t.selected, disabled: t && t.disabled }))), this.optionsPerPage = t.optionsPerPage || 10, this.value = (this.choices[this.cursor] || {}).value, this.clear = r("", this.out.columns), this.render(); } moveCursor(t) { this.cursor = t, this.value = this.choices[t].value, this.fire(); } reset() { this.moveCursor(0), this.fire(), this.render(); } exit() { this.abort(); } abort() { this.done = this.aborted = !0, this.fire(), this.render(), this.out.write("\n"), this.close(); } submit() { this.selection.disabled ? this.bell() : (this.done = !0, this.aborted = !1, this.fire(), this.render(), this.out.write("\n"), this.close()); } first() { this.moveCursor(0), this.render(); } last() { this.moveCursor(this.choices.length - 1), this.render(); } up() { 0 === this.cursor ? this.moveCursor(this.choices.length - 1) : this.moveCursor(this.cursor - 1), this.render(); } down() { this.cursor === this.choices.length - 1 ? this.moveCursor(0) : this.moveCursor(this.cursor + 1), this.render(); } next() { this.moveCursor((this.cursor + 1) % this.choices.length), this.render(); } _(t, e) { if (" " === t) return this.submit(); } get selection() { return this.choices[this.cursor]; } render() { if (this.closed) return; this.firstRender ? this.out.write(l.hide) : this.out.write(r(this.outputText, this.out.columns)), super.render(); let e = h(this.cursor, this.choices.length, this.optionsPerPage), i = e.startIndex, u = e.endIndex; if (this.outputText = [s.symbol(this.done, this.aborted), t.bold(this.msg), s.delimiter(!1), this.done ? this.selection.title : this.selection.disabled ? t.yellow(this.warn) : t.gray(this.hint)].join(" "), !this.done) { this.outputText += "\n"; for (let e = i; e < u; e++) { let s, r, h = "", l = this.choices[e]; r = e === i && i > 0 ? n.arrowUp : e === u - 1 && u < this.choices.length ? n.arrowDown : " ", l.disabled ? (s = this.cursor === e ? t.gray().underline(l.title) : t.strikethrough().gray(l.title), r = (this.cursor === e ? t.bold().gray(n.pointer) + " " : "  ") + r) : (s = this.cursor === e ? t.cyan().underline(l.title) : l.title, r = (this.cursor === e ? t.cyan(n.pointer) + " " : "  ") + r, l.description && this.cursor === e && (h = ` - ${l.description}`, (r.length + s.length + h.length >= this.out.columns || l.description.split(/\r?\n/).length > 1) && (h = "\n" + o(l.description, { margin: 3, width: this.out.columns })))), this.outputText += `${r} ${s}${t.gray(h)}\n`; } } this.out.write(this.outputText); } }; } function Pt() { if (I) return D; I = 1; const t = mt(), e = Ot(), i = Mt(), s = i.style, r = i.clear, n = bt(), o = n.cursor, h = n.erase; return D = class extends e { constructor(t = {}) { super(t), this.msg = t.message, this.value = !!t.initial, this.active = t.active || "on", this.inactive = t.inactive || "off", this.initialValue = this.value, this.render(); } reset() { this.value = this.initialValue, this.fire(), this.render(); } exit() { this.abort(); } abort() { this.done = this.aborted = !0, this.fire(), this.render(), this.out.write("\n"), this.close(); } submit() { this.done = !0, this.aborted = !1, this.fire(), this.render(), this.out.write("\n"), this.close(); } deactivate() { if (!1 === this.value) return this.bell(); this.value = !1, this.render(); } activate() { if (!0 === this.value) return this.bell(); this.value = !0, this.render(); } delete() { this.deactivate(); } left() { this.deactivate(); } right() { this.activate(); } down() { this.deactivate(); } up() { this.activate(); } next() { this.value = !this.value, this.fire(), this.render(); } _(t, e) { if (" " === t) this.value = !this.value; else if ("1" === t) this.value = !0; else { if ("0" !== t) return this.bell(); this.value = !1; } this.render(); } render() { this.closed || (this.firstRender ? this.out.write(o.hide) : this.out.write(r(this.outputText, this.out.columns)), super.render(), this.outputText = [s.symbol(this.done, this.aborted), t.bold(this.msg), s.delimiter(this.done), this.value ? this.inactive : t.cyan().underline(this.inactive), t.gray("/"), this.value ? t.cyan().underline(this.active) : this.active].join(" "), this.out.write(h.line + o.to(0) + this.outputText)); } }; } function $t() { if (A) return j; A = 1; class t { constructor({ token: t, date: e, parts: i, locales: s }) { this.token = t, this.date = e || new Date, this.parts = i || [this], this.locales = s || {}; } up() { } down() { } next() { const e = this.parts.indexOf(this); return this.parts.find(((i, s) => s > e && i instanceof t)); } setTo(t) { } prev() { let e = [].concat(this.parts).reverse(); const i = e.indexOf(this); return e.find(((e, s) => s > i && e instanceof t)); } toString() { return String(this.date); } } return j = t; } function kt() { if (_) return E; _ = 1; const t = $t(); return E = class extends t { constructor(t = {}) { super(t); } up() { this.date.setHours((this.date.getHours() + 12) % 24); } down() { this.up(); } toString() { let t = this.date.getHours() > 12 ? "pm" : "am"; return /\A/.test(this.token) ? t.toUpperCase() : t; } }, E; } function Dt() { if (F) return R; F = 1; const t = $t(); return R = class extends t { constructor(t = {}) { super(t); } up() { this.date.setDate(this.date.getDate() + 1); } down() { this.date.setDate(this.date.getDate() - 1); } setTo(t) { this.date.setDate(parseInt(t.substr(-2))); } toString() { let t = this.date.getDate(), e = this.date.getDay(); return "DD" === this.token ? String(t).padStart(2, "0") : "Do" === this.token ? t + (i = t, 1 == (i %= 10) ? "st" : 2 === i ? "nd" : 3 === i ? "rd" : "th") : "d" === this.token ? e + 1 : "ddd" === this.token ? this.locales.weekdaysShort[e] : "dddd" === this.token ? this.locales.weekdays[e] : t; var i; } }, R; } function It() { if (Y) return V; Y = 1; const t = $t(); return V = class extends t { constructor(t = {}) { super(t); } up() { this.date.setHours(this.date.getHours() + 1); } down() { this.date.setHours(this.date.getHours() - 1); } setTo(t) { this.date.setHours(parseInt(t.substr(-2))); } toString() { let t = this.date.getHours(); return /h/.test(this.token) && (t = t % 12 || 12), this.token.length > 1 ? String(t).padStart(2, "0") : t; } }, V; } function jt() { if (L) return H; L = 1; const t = $t(); return H = class extends t { constructor(t = {}) { super(t); } up() { this.date.setMilliseconds(this.date.getMilliseconds() + 1); } down() { this.date.setMilliseconds(this.date.getMilliseconds() - 1); } setTo(t) { this.date.setMilliseconds(parseInt(t.substr(-this.token.length))); } toString() { return String(this.date.getMilliseconds()).padStart(4, "0").substr(0, this.token.length); } }; } function At() { if (U) return N; U = 1; const t = $t(); return N = class extends t { constructor(t = {}) { super(t); } up() { this.date.setMinutes(this.date.getMinutes() + 1); } down() { this.date.setMinutes(this.date.getMinutes() - 1); } setTo(t) { this.date.setMinutes(parseInt(t.substr(-2))); } toString() { let t = this.date.getMinutes(); return this.token.length > 1 ? String(t).padStart(2, "0") : t; } }; } function Et() { if (B) return J; B = 1; const t = $t(); return J = class extends t { constructor(t = {}) { super(t); } up() { this.date.setMonth(this.date.getMonth() + 1); } down() { this.date.setMonth(this.date.getMonth() - 1); } setTo(t) { t = parseInt(t.substr(-2)) - 1, this.date.setMonth(t < 0 ? 0 : t); } toString() { let t = this.date.getMonth(), e = this.token.length; return 2 === e ? String(t + 1).padStart(2, "0") : 3 === e ? this.locales.monthsShort[t] : 4 === e ? this.locales.months[t] : String(t + 1); } }, J; } function _t() { if (W) return z; W = 1; const t = $t(); return z = class extends t { constructor(t = {}) { super(t); } up() { this.date.setSeconds(this.date.getSeconds() + 1); } down() { this.date.setSeconds(this.date.getSeconds() - 1); } setTo(t) { this.date.setSeconds(parseInt(t.substr(-2))); } toString() { let t = this.date.getSeconds(); return this.token.length > 1 ? String(t).padStart(2, "0") : t; } }; } function Rt() { if (q) return Z; q = 1; const t = $t(); return Z = class extends t { constructor(t = {}) { super(t); } up() { this.date.setFullYear(this.date.getFullYear() + 1); } down() { this.date.setFullYear(this.date.getFullYear() - 1); } setTo(t) { this.date.setFullYear(t.substr(-4)); } toString() { let t = String(this.date.getFullYear()).padStart(4, "0"); return 2 === this.token.length ? t.substr(-2) : t; } }, Z; } function Ft() { if (X) return Q; function t(t, e, i, s, r, n, o) { try { var h = t[n](o), l = h.value; } catch (t) { return void i(t); } h.done ? e(l) : Promise.resolve(l).then(s, r); } function e(e) { return function () { var i = this, s = arguments; return new Promise((function (r, n) { var o = e.apply(i, s); function h(e) { t(o, r, n, h, l, "next", e); } function l(e) { t(o, r, n, h, l, "throw", e); } h(void 0); })); }; } X = 1; const i = mt(), s = Ot(), r = Mt(), n = r.style, o = r.clear, h = r.figures, l = bt(), u = l.erase, a = l.cursor, d = K ? G : (K = 1, G = { DatePart: $t(), Meridiem: kt(), Day: Dt(), Hours: It(), Milliseconds: jt(), Minutes: At(), Month: Et(), Seconds: _t(), Year: Rt() }), c = d.DatePart, p = d.Meridiem, f = d.Day, g = d.Hours, m = d.Milliseconds, v = d.Minutes, b = d.Month, w = d.Seconds, y = d.Year, x = /\\(.)|"((?:\\["\\]|[^"])+)"|(D[Do]?|d{3,4}|d)|(M{1,4})|(YY(?:YY)?)|([aA])|([Hh]{1,2})|(m{1,2})|(s{1,2})|(S{1,4})|./g, S = { 1: ({ token: t }) => t.replace(/\\(.)/g, "$1"), 2: t => new f(t), 3: t => new b(t), 4: t => new y(t), 5: t => new p(t), 6: t => new g(t), 7: t => new v(t), 8: t => new w(t), 9: t => new m(t) }, M = { months: "January,February,March,April,May,June,July,August,September,October,November,December".split(","), monthsShort: "Jan,Feb,Mar,Apr,May,Jun,Jul,Aug,Sep,Oct,Nov,Dec".split(","), weekdays: "Sunday,Monday,Tuesday,Wednesday,Thursday,Friday,Saturday".split(","), weekdaysShort: "Sun,Mon,Tue,Wed,Thu,Fri,Sat".split(",") }; return Q = class extends s { constructor(t = {}) { super(t), this.msg = t.message, this.cursor = 0, this.typed = "", this.locales = Object.assign(M, t.locales), this._date = t.initial || new Date, this.errorMsg = t.error || "Please Enter A Valid Value", this.validator = t.validate || (() => !0), this.mask = t.mask || "YYYY-MM-DD HH:mm:ss", this.clear = o("", this.out.columns), this.render(); } get value() { return this.date; } get date() { return this._date; } set date(t) { t && this._date.setTime(t.getTime()); } set mask(t) { let e; for (this.parts = []; e = x.exec(t);) { let t = e.shift(), i = e.findIndex((t => null != t)); this.parts.push(i in S ? S[i]({ token: e[i] || t, date: this.date, parts: this.parts, locales: this.locales }) : e[i] || t); } let i = this.parts.reduce(((t, e) => ("string" == typeof e && "string" == typeof t[t.length - 1] ? t[t.length - 1] += e : t.push(e), t)), []); this.parts.splice(0), this.parts.push(...i), this.reset(); } moveCursor(t) { this.typed = "", this.cursor = t, this.fire(); } reset() { this.moveCursor(this.parts.findIndex((t => t instanceof c))), this.fire(), this.render(); } exit() { this.abort(); } abort() { this.done = this.aborted = !0, this.error = !1, this.fire(), this.render(), this.out.write("\n"), this.close(); } validate() { var t = this; return e((function* () { let e = yield t.validator(t.value); "string" == typeof e && (t.errorMsg = e, e = !1), t.error = !e; }))(); } submit() { var t = this; return e((function* () { if (yield t.validate(), t.error) return t.color = "red", t.fire(), void t.render(); t.done = !0, t.aborted = !1, t.fire(), t.render(), t.out.write("\n"), t.close(); }))(); } up() { this.typed = "", this.parts[this.cursor].up(), this.render(); } down() { this.typed = "", this.parts[this.cursor].down(), this.render(); } left() { let t = this.parts[this.cursor].prev(); if (null == t) return this.bell(); this.moveCursor(this.parts.indexOf(t)), this.render(); } right() { let t = this.parts[this.cursor].next(); if (null == t) return this.bell(); this.moveCursor(this.parts.indexOf(t)), this.render(); } next() { let t = this.parts[this.cursor].next(); this.moveCursor(t ? this.parts.indexOf(t) : this.parts.findIndex((t => t instanceof c))), this.render(); } _(t) { /\d/.test(t) && (this.typed += t, this.parts[this.cursor].setTo(this.typed), this.render()); } render() { this.closed || (this.firstRender ? this.out.write(a.hide) : this.out.write(o(this.outputText, this.out.columns)), super.render(), this.outputText = [n.symbol(this.done, this.aborted), i.bold(this.msg), n.delimiter(!1), this.parts.reduce(((t, e, s) => t.concat(s !== this.cursor || this.done ? e : i.cyan().underline(e.toString()))), []).join("")].join(" "), this.error && (this.outputText += this.errorMsg.split("\n").reduce(((t, e, s) => t + `\n${s ? " " : h.pointerSmall} ${i.red().italic(e)}`), "")), this.out.write(u.line + a.to(0) + this.outputText)); } }, Q; } function Vt() { if (et) return tt; function t(t, e, i, s, r, n, o) { try { var h = t[n](o), l = h.value; } catch (t) { return void i(t); } h.done ? e(l) : Promise.resolve(l).then(s, r); } function e(e) { return function () { var i = this, s = arguments; return new Promise((function (r, n) { var o = e.apply(i, s); function h(e) { t(o, r, n, h, l, "next", e); } function l(e) { t(o, r, n, h, l, "throw", e); } h(void 0); })); }; } et = 1; const i = mt(), s = Ot(), r = bt(), n = r.cursor, o = r.erase, h = Mt(), l = h.style, u = h.figures, a = h.clear, d = h.lines, c = /[0-9]/, p = t => void 0 !== t, f = (t, e) => { let i = Math.pow(10, e); return Math.round(t * i) / i; }; return tt = class extends s { constructor(t = {}) { super(t), this.transform = l.render(t.style), this.msg = t.message, this.initial = p(t.initial) ? t.initial : "", this.float = !!t.float, this.round = t.round || 2, this.inc = t.increment || 1, this.min = p(t.min) ? t.min : -1 / 0, this.max = p(t.max) ? t.max : 1 / 0, this.errorMsg = t.error || "Please Enter A Valid Value", this.validator = t.validate || (() => !0), this.color = "cyan", this.value = "", this.typed = "", this.lastHit = 0, this.render(); } set value(t) { t || 0 === t ? (this.placeholder = !1, this.rendered = this.transform.render(`${f(t, this.round)}`), this._value = f(t, this.round)) : (this.placeholder = !0, this.rendered = i.gray(this.transform.render(`${this.initial}`)), this._value = ""), this.fire(); } get value() { return this._value; } parse(t) { return this.float ? parseFloat(t) : parseInt(t); } valid(t) { return "-" === t || "." === t && this.float || c.test(t); } reset() { this.typed = "", this.value = "", this.fire(), this.render(); } exit() { this.abort(); } abort() { let t = this.value; this.value = "" !== t ? t : this.initial, this.done = this.aborted = !0, this.error = !1, this.fire(), this.render(), this.out.write("\n"), this.close(); } validate() { var t = this; return e((function* () { let e = yield t.validator(t.value); "string" == typeof e && (t.errorMsg = e, e = !1), t.error = !e; }))(); } submit() { var t = this; return e((function* () { if (yield t.validate(), t.error) return t.color = "red", t.fire(), void t.render(); let e = t.value; t.value = "" !== e ? e : t.initial, t.done = !0, t.aborted = !1, t.error = !1, t.fire(), t.render(), t.out.write("\n"), t.close(); }))(); } up() { if (this.typed = "", "" === this.value && (this.value = this.min - this.inc), this.value >= this.max) return this.bell(); this.value += this.inc, this.color = "cyan", this.fire(), this.render(); } down() { if (this.typed = "", "" === this.value && (this.value = this.min + this.inc), this.value <= this.min) return this.bell(); this.value -= this.inc, this.color = "cyan", this.fire(), this.render(); } delete() { let t = this.value.toString(); if (0 === t.length) return this.bell(); this.value = this.parse(t = t.slice(0, -1)) || "", "" !== this.value && this.value < this.min && (this.value = this.min), this.color = "cyan", this.fire(), this.render(); } next() { this.value = this.initial, this.fire(), this.render(); } _(t, e) { if (!this.valid(t)) return this.bell(); const i = Date.now(); if (i - this.lastHit > 1e3 && (this.typed = ""), this.typed += t, this.lastHit = i, this.color = "cyan", "." === t) return this.fire(); this.value = Math.min(this.parse(this.typed), this.max), this.value > this.max && (this.value = this.max), this.value < this.min && (this.value = this.min), this.fire(), this.render(); } render() { this.closed || (this.firstRender || (this.outputError && this.out.write(n.down(d(this.outputError, this.out.columns) - 1) + a(this.outputError, this.out.columns)), this.out.write(a(this.outputText, this.out.columns))), super.render(), this.outputError = "", this.outputText = [l.symbol(this.done, this.aborted), i.bold(this.msg), l.delimiter(this.done), this.done && (this.done || this.placeholder) ? this.rendered : i[this.color]().underline(this.rendered)].join(" "), this.error && (this.outputError += this.errorMsg.split("\n").reduce(((t, e, s) => t + `\n${s ? " " : u.pointerSmall} ${i.red().italic(e)}`), "")), this.out.write(o.line + n.to(0) + this.outputText + n.save + this.outputError + n.restore)); } }; } function Yt() { if (st) return it; st = 1; const t = mt(), e = bt().cursor, i = Ot(), s = Mt(), r = s.clear, n = s.figures, o = s.style, h = s.wrap, l = s.entriesToDisplay; return it = class extends i { constructor(t = {}) { super(t), this.msg = t.message, this.cursor = t.cursor || 0, this.scrollIndex = t.cursor || 0, this.hint = t.hint || "", this.warn = t.warn || "- This option is disabled -", this.minSelected = t.min, this.showMinError = !1, this.maxChoices = t.max, this.instructions = t.instructions, this.optionsPerPage = t.optionsPerPage || 10, this.value = t.choices.map(((t, e) => ("string" == typeof t && (t = { title: t, value: e }), { title: t && (t.title || t.value || t), description: t && t.description, value: t && (void 0 === t.value ? e : t.value), selected: t && t.selected, disabled: t && t.disabled }))), this.clear = r("", this.out.columns), t.overrideRender || this.render(); } reset() { this.value.map((t => !t.selected)), this.cursor = 0, this.fire(), this.render(); } selected() { return this.value.filter((t => t.selected)); } exit() { this.abort(); } abort() { this.done = this.aborted = !0, this.fire(), this.render(), this.out.write("\n"), this.close(); } submit() { const t = this.value.filter((t => t.selected)); this.minSelected && t.length < this.minSelected ? (this.showMinError = !0, this.render()) : (this.done = !0, this.aborted = !1, this.fire(), this.render(), this.out.write("\n"), this.close()); } first() { this.cursor = 0, this.render(); } last() { this.cursor = this.value.length - 1, this.render(); } next() { this.cursor = (this.cursor + 1) % this.value.length, this.render(); } up() { 0 === this.cursor ? this.cursor = this.value.length - 1 : this.cursor--, this.render(); } down() { this.cursor === this.value.length - 1 ? this.cursor = 0 : this.cursor++, this.render(); } left() { this.value[this.cursor].selected = !1, this.render(); } right() { if (this.value.filter((t => t.selected)).length >= this.maxChoices) return this.bell(); this.value[this.cursor].selected = !0, this.render(); } handleSpaceToggle() { const t = this.value[this.cursor]; if (t.selected) t.selected = !1, this.render(); else { if (t.disabled || this.value.filter((t => t.selected)).length >= this.maxChoices) return this.bell(); t.selected = !0, this.render(); } } toggleAll() { if (void 0 !== this.maxChoices || this.value[this.cursor].disabled) return this.bell(); const t = !this.value[this.cursor].selected; this.value.filter((t => !t.disabled)).forEach((e => e.selected = t)), this.render(); } _(t, e) { if (" " === t) this.handleSpaceToggle(); else { if ("a" !== t) return this.bell(); this.toggleAll(); } } renderInstructions() { return void 0 === this.instructions || this.instructions ? "string" == typeof this.instructions ? this.instructions : `\nInstructions:\n    ${n.arrowUp}/${n.arrowDown}: Highlight option\n    ${n.arrowLeft}/${n.arrowRight}/[space]: Toggle selection\n` + (void 0 === this.maxChoices ? "    a: Toggle all\n" : "") + "    enter/return: Complete answer" : ""; } renderOption(e, i, s, r) { const o = (i.selected ? t.green(n.radioOn) : n.radioOff) + " " + r + " "; let l, u; return i.disabled ? l = e === s ? t.gray().underline(i.title) : t.strikethrough().gray(i.title) : (l = e === s ? t.cyan().underline(i.title) : i.title, e === s && i.description && (u = ` - ${i.description}`, (o.length + l.length + u.length >= this.out.columns || i.description.split(/\r?\n/).length > 1) && (u = "\n" + h(i.description, { margin: o.length, width: this.out.columns })))), o + l + t.gray(u || ""); } paginateOptions(e) { if (0 === e.length) return t.red("No matches for this query."); let i, s = l(this.cursor, e.length, this.optionsPerPage), r = s.startIndex, o = s.endIndex, h = []; for (let t = r; t < o; t++)i = t === r && r > 0 ? n.arrowUp : t === o - 1 && o < e.length ? n.arrowDown : " ", h.push(this.renderOption(this.cursor, e[t], t, i)); return "\n" + h.join("\n"); } renderOptions(t) { return this.done ? "" : this.paginateOptions(t); } renderDoneOrInstructions() { if (this.done) return this.value.filter((t => t.selected)).map((t => t.title)).join(", "); const e = [t.gray(this.hint), this.renderInstructions()]; return this.value[this.cursor].disabled && e.push(t.yellow(this.warn)), e.join(" "); } render() { if (this.closed) return; this.firstRender && this.out.write(e.hide), super.render(); let i = [o.symbol(this.done, this.aborted), t.bold(this.msg), o.delimiter(!1), this.renderDoneOrInstructions()].join(" "); this.showMinError && (i += t.red(`You must select a minimum of ${this.minSelected} choices.`), this.showMinError = !1), i += this.renderOptions(this.value), this.out.write(this.clear + i), this.clear = r(i, this.out.columns); } }, it; } function Ht() { if (nt) return rt; function t(t, e, i, s, r, n, o) { try { var h = t[n](o), l = h.value; } catch (t) { return void i(t); } h.done ? e(l) : Promise.resolve(l).then(s, r); } nt = 1; const e = mt(), i = Ot(), s = bt(), r = s.erase, n = s.cursor, o = Mt(), h = o.style, l = o.clear, u = o.figures, a = o.wrap, d = o.entriesToDisplay, c = (t, e) => t[e] && (t[e].value || t[e].title || t[e]), p = (t, e) => t[e] && (t[e].title || t[e].value || t[e]); return rt = class extends i { constructor(t = {}) { super(t), this.msg = t.message, this.suggest = t.suggest, this.choices = t.choices, this.initial = "number" == typeof t.initial ? t.initial : ((t, e) => { const i = t.findIndex((t => t.value === e || t.title === e)); return i > -1 ? i : void 0; })(t.choices, t.initial), this.select = this.initial || t.cursor || 0, this.i18n = { noMatches: t.noMatches || "no matches found" }, this.fallback = t.fallback || this.initial, this.clearFirst = t.clearFirst || !1, this.suggestions = [], this.input = "", this.limit = t.limit || 10, this.cursor = 0, this.transform = h.render(t.style), this.scale = this.transform.scale, this.render = this.render.bind(this), this.complete = this.complete.bind(this), this.clear = l("", this.out.columns), this.complete(this.render), this.render(); } set fallback(t) { this._fb = Number.isSafeInteger(parseInt(t)) ? parseInt(t) : t; } get fallback() { let t; return "number" == typeof this._fb ? t = this.choices[this._fb] : "string" == typeof this._fb && (t = { title: this._fb }), t || this._fb || { title: this.i18n.noMatches }; } moveSelect(t) { this.select = t, this.suggestions.length > 0 ? this.value = c(this.suggestions, t) : this.value = this.fallback.value, this.fire(); } complete(e) { var i, s = this; return (i = function* () { const t = s.completing = s.suggest(s.input, s.choices), i = yield t; if (s.completing !== t) return; s.suggestions = i.map(((t, e, i) => ({ title: p(i, e), value: c(i, e), description: t.description }))), s.completing = !1; const r = Math.max(i.length - 1, 0); s.moveSelect(Math.min(r, s.select)), e && e(); }, function () { var e = this, s = arguments; return new Promise((function (r, n) { var o = i.apply(e, s); function h(e) { t(o, r, n, h, l, "next", e); } function l(e) { t(o, r, n, h, l, "throw", e); } h(void 0); })); })(); } reset() { this.input = "", this.complete((() => { this.moveSelect(void 0 !== this.initial ? this.initial : 0), this.render(); })), this.render(); } exit() { this.clearFirst && this.input.length > 0 ? this.reset() : (this.done = this.exited = !0, this.aborted = !1, this.fire(), this.render(), this.out.write("\n"), this.close()); } abort() { this.done = this.aborted = !0, this.exited = !1, this.fire(), this.render(), this.out.write("\n"), this.close(); } submit() { this.done = !0, this.aborted = this.exited = !1, this.fire(), this.render(), this.out.write("\n"), this.close(); } _(t, e) { let i = this.input.slice(0, this.cursor), s = this.input.slice(this.cursor); this.input = `${i}${t}${s}`, this.cursor = i.length + 1, this.complete(this.render), this.render(); } delete() { if (0 === this.cursor) return this.bell(); let t = this.input.slice(0, this.cursor - 1), e = this.input.slice(this.cursor); this.input = `${t}${e}`, this.complete(this.render), this.cursor = this.cursor - 1, this.render(); } deleteForward() { if (this.cursor * this.scale >= this.rendered.length) return this.bell(); let t = this.input.slice(0, this.cursor), e = this.input.slice(this.cursor + 1); this.input = `${t}${e}`, this.complete(this.render), this.render(); } first() { this.moveSelect(0), this.render(); } last() { this.moveSelect(this.suggestions.length - 1), this.render(); } up() { 0 === this.select ? this.moveSelect(this.suggestions.length - 1) : this.moveSelect(this.select - 1), this.render(); } down() { this.select === this.suggestions.length - 1 ? this.moveSelect(0) : this.moveSelect(this.select + 1), this.render(); } next() { this.select === this.suggestions.length - 1 ? this.moveSelect(0) : this.moveSelect(this.select + 1), this.render(); } nextPage() { this.moveSelect(Math.min(this.select + this.limit, this.suggestions.length - 1)), this.render(); } prevPage() { this.moveSelect(Math.max(this.select - this.limit, 0)), this.render(); } left() { if (this.cursor <= 0) return this.bell(); this.cursor = this.cursor - 1, this.render(); } right() { if (this.cursor * this.scale >= this.rendered.length) return this.bell(); this.cursor = this.cursor + 1, this.render(); } renderOption(t, i, s, r) { let n, o = s ? u.arrowUp : r ? u.arrowDown : " ", h = i ? e.cyan().underline(t.title) : t.title; return o = (i ? e.cyan(u.pointer) + " " : "  ") + o, t.description && (n = ` - ${t.description}`, (o.length + h.length + n.length >= this.out.columns || t.description.split(/\r?\n/).length > 1) && (n = "\n" + a(t.description, { margin: 3, width: this.out.columns }))), o + " " + h + e.gray(n || ""); } render() { if (this.closed) return; this.firstRender ? this.out.write(n.hide) : this.out.write(l(this.outputText, this.out.columns)), super.render(); let t = d(this.select, this.choices.length, this.limit), i = t.startIndex, s = t.endIndex; if (this.outputText = [h.symbol(this.done, this.aborted, this.exited), e.bold(this.msg), h.delimiter(this.completing), this.done && this.suggestions[this.select] ? this.suggestions[this.select].title : this.rendered = this.transform.render(this.input)].join(" "), !this.done) { const t = this.suggestions.slice(i, s).map(((t, e) => this.renderOption(t, this.select === e + i, 0 === e && i > 0, e + i === s - 1 && s < this.choices.length))).join("\n"); this.outputText += "\n" + (t || e.gray(this.fallback.title)); } this.out.write(r.line + n.to(0) + this.outputText); } }, rt; } function Lt() { if (ht) return ot; ht = 1; const t = mt(), e = bt().cursor, i = Yt(), s = Mt(), r = s.clear, n = s.style, o = s.figures; return ot = class extends i { constructor(t = {}) { t.overrideRender = !0, super(t), this.inputValue = "", this.clear = r("", this.out.columns), this.filteredOptions = this.value, this.render(); } last() { this.cursor = this.filteredOptions.length - 1, this.render(); } next() { this.cursor = (this.cursor + 1) % this.filteredOptions.length, this.render(); } up() { 0 === this.cursor ? this.cursor = this.filteredOptions.length - 1 : this.cursor--, this.render(); } down() { this.cursor === this.filteredOptions.length - 1 ? this.cursor = 0 : this.cursor++, this.render(); } left() { this.filteredOptions[this.cursor].selected = !1, this.render(); } right() { if (this.value.filter((t => t.selected)).length >= this.maxChoices) return this.bell(); this.filteredOptions[this.cursor].selected = !0, this.render(); } delete() { this.inputValue.length && (this.inputValue = this.inputValue.substr(0, this.inputValue.length - 1), this.updateFilteredOptions()); } updateFilteredOptions() { const t = this.filteredOptions[this.cursor]; this.filteredOptions = this.value.filter((t => !this.inputValue || (!("string" != typeof t.title || !t.title.toLowerCase().includes(this.inputValue.toLowerCase())) || !("string" != typeof t.value || !t.value.toLowerCase().includes(this.inputValue.toLowerCase()))))); const e = this.filteredOptions.findIndex((e => e === t)); this.cursor = e < 0 ? 0 : e, this.render(); } handleSpaceToggle() { const t = this.filteredOptions[this.cursor]; if (t.selected) t.selected = !1, this.render(); else { if (t.disabled || this.value.filter((t => t.selected)).length >= this.maxChoices) return this.bell(); t.selected = !0, this.render(); } } handleInputChange(t) { this.inputValue = this.inputValue + t, this.updateFilteredOptions(); } _(t, e) { " " === t ? this.handleSpaceToggle() : this.handleInputChange(t); } renderInstructions() { return void 0 === this.instructions || this.instructions ? "string" == typeof this.instructions ? this.instructions : `\n\tInstructions:\n\t    ${o.arrowUp}/${o.arrowDown}: Highlight option\n\t    ${o.arrowLeft}/${o.arrowRight}/[space]: Toggle selection\n\t    [a,b,c]/delete: Filter choices\n\t    enter/return: Complete answer\n\t` : ""; } renderCurrentInput() { return `\n\tFiltered results for: ${this.inputValue ? this.inputValue : t.gray("Enter something to filter")}\n`; } renderOption(e, i, s) { let r; return r = i.disabled ? e === s ? t.gray().underline(i.title) : t.strikethrough().gray(i.title) : e === s ? t.cyan().underline(i.title) : i.title, (i.selected ? t.green(o.radioOn) : o.radioOff) + "  " + r; } renderDoneOrInstructions() { if (this.done) return this.value.filter((t => t.selected)).map((t => t.title)).join(", "); const e = [t.gray(this.hint), this.renderInstructions(), this.renderCurrentInput()]; return this.filteredOptions.length && this.filteredOptions[this.cursor].disabled && e.push(t.yellow(this.warn)), e.join(" "); } render() { if (this.closed) return; this.firstRender && this.out.write(e.hide), super.render(); let i = [n.symbol(this.done, this.aborted), t.bold(this.msg), n.delimiter(!1), this.renderDoneOrInstructions()].join(" "); this.showMinError && (i += t.red(`You must select a minimum of ${this.minSelected} choices.`), this.showMinError = !1), i += this.renderOptions(this.filteredOptions), this.out.write(this.clear + i), this.clear = r(i, this.out.columns); } }, ot; } function Nt() { if (ut) return lt; ut = 1; const t = mt(), e = Ot(), i = Mt(), s = i.style, r = i.clear, n = bt(), o = n.erase, h = n.cursor; return lt = class extends e { constructor(t = {}) { super(t), this.msg = t.message, this.value = t.initial, this.initialValue = !!t.initial, this.yesMsg = t.yes || "yes", this.yesOption = t.yesOption || "(Y/n)", this.noMsg = t.no || "no", this.noOption = t.noOption || "(y/N)", this.render(); } reset() { this.value = this.initialValue, this.fire(), this.render(); } exit() { this.abort(); } abort() { this.done = this.aborted = !0, this.fire(), this.render(), this.out.write("\n"), this.close(); } submit() { this.value = this.value || !1, this.done = !0, this.aborted = !1, this.fire(), this.render(), this.out.write("\n"), this.close(); } _(t, e) { return "y" === t.toLowerCase() ? (this.value = !0, this.submit()) : "n" === t.toLowerCase() ? (this.value = !1, this.submit()) : this.bell(); } render() { this.closed || (this.firstRender ? this.out.write(h.hide) : this.out.write(r(this.outputText, this.out.columns)), super.render(), this.outputText = [s.symbol(this.done, this.aborted), t.bold(this.msg), s.delimiter(this.done), this.done ? this.value ? this.yesMsg : this.noMsg : t.gray(this.initialValue ? this.yesOption : this.noOption)].join(" "), this.out.write(o.line + h.to(0) + this.outputText)); } }; } function Ut() { return ct || (ct = 1, function (t) { const e = gt, i = dt ? at : (dt = 1, at = { TextPrompt: Tt(), SelectPrompt: Ct(), TogglePrompt: Pt(), DatePrompt: Ft(), NumberPrompt: Vt(), MultiselectPrompt: Yt(), AutocompletePrompt: Ht(), AutocompleteMultiselectPrompt: Lt(), ConfirmPrompt: Nt() }), s = t => t; function r(t, e, r = {}) { return new Promise(((n, o) => { const h = new i[t](e), l = r.onAbort || s, u = r.onSubmit || s, a = r.onExit || s; h.on("state", e.onState || s), h.on("submit", (t => n(u(t)))), h.on("exit", (t => n(a(t)))), h.on("abort", (t => o(l(t)))); })); } e.text = t => r("TextPrompt", t), e.password = t => (t.style = "password", e.text(t)), e.invisible = t => (t.style = "invisible", e.text(t)), e.number = t => r("NumberPrompt", t), e.date = t => r("DatePrompt", t), e.confirm = t => r("ConfirmPrompt", t), e.list = t => { const e = t.separator || ","; return r("TextPrompt", t, { onSubmit: t => t.split(e).map((t => t.trim())) }); }, e.toggle = t => r("TogglePrompt", t), e.select = t => r("SelectPrompt", t), e.multiselect = t => { t.choices = [].concat(t.choices || []); const e = t => t.filter((t => t.selected)).map((t => t.value)); return r("MultiselectPrompt", t, { onAbort: e, onSubmit: e }); }, e.autocompleteMultiselect = t => { t.choices = [].concat(t.choices || []); const e = t => t.filter((t => t.selected)).map((t => t.value)); return r("AutocompleteMultiselectPrompt", t, { onAbort: e, onSubmit: e }); }; const n = (t, e) => Promise.resolve(e.filter((e => e.title.slice(0, t.length).toLowerCase() === t.toLowerCase()))); e.autocomplete = t => (t.suggest = t.suggest || n, t.choices = [].concat(t.choices || []), r("AutocompletePrompt", t)); }()), gt; } var Jt, Bt, zt, Wt, Zt, qt, Gt, Kt, Qt, Xt, te, ee, ie, se, re, ne, oe, he, le, ue, ae, de, ce, pe, fe, ge, me, ve, be, we, ye, xe, Se, Me, Oe, Te, Ce, Pe, $e, ke, De, Ie, je, Ae, Ee, _e, Re, Fe, Ve, Ye, He, Le, Ne, Ue, Je, Be, ze, We, Ze, qe, Ge, Ke, Qe, Xe = {}; function ti() { return Wt ? zt : (Wt = 1, zt = t => { const e = ["[\\u001B\\u009B][[\\]()#;?]*(?:(?:(?:(?:;[-a-zA-Z\\d\\/#&.:=?%@~_]+)*|[a-zA-Z\\d]+(?:;[-a-zA-Z\\d\\/#&.:=?%@~_]*)*)?\\u0007)", "(?:(?:\\d{1,4}(?:;\\d{0,4})*)?[\\dA-PRZcf-ntqry=><~]))"].join("|"), i = new RegExp(e, "g"); return "string" == typeof t ? t.replace(i, "") : t; }); } function ei() { if (qt) return Zt; qt = 1; const t = ti(), { erase: e, cursor: i } = bt(); return Zt = function (s, r) { if (!r) return e.line + i.to(0); let n = 0; const o = s.split(/\r?\n/); for (let e of o) n += 1 + Math.floor(Math.max([...t(e)].length - 1, 0) / r); return e.lines(n); }, Zt; } function ii() { if (Kt) return Gt; Kt = 1; const t = { arrowUp: "↑", arrowDown: "↓", arrowLeft: "←", arrowRight: "→", radioOn: "◉", radioOff: "◯", tick: "✔", cross: "✖", ellipsis: "…", pointerSmall: "›", line: "─", pointer: "❯" }, e = { arrowUp: t.arrowUp, arrowDown: t.arrowDown, arrowLeft: t.arrowLeft, arrowRight: t.arrowRight, radioOn: "(*)", radioOff: "( )", tick: "√", cross: "×", ellipsis: "...", pointerSmall: "»", line: "─", pointer: ">" }, i = "win32" === process.platform ? e : t; return Gt = i; } function si() { if (Xt) return Qt; Xt = 1; const t = mt(), e = ii(), i = Object.freeze({ password: { scale: 1, render: t => "*".repeat(t.length) }, emoji: { scale: 2, render: t => "😃".repeat(t.length) }, invisible: { scale: 0, render: t => "" }, default: { scale: 1, render: t => `${t}` } }), s = Object.freeze({ aborted: t.red(e.cross), done: t.green(e.tick), exited: t.yellow(e.cross), default: t.cyan("?") }); return Qt = { styles: i, render: t => i[t] || i.default, symbols: s, symbol: (t, e, i) => e ? s.aborted : i ? s.exited : t ? s.done : s.default, delimiter: i => t.gray(i ? e.ellipsis : e.pointerSmall), item: (i, s) => t.gray(i ? s ? e.pointerSmall : "+" : e.line) }; } function ri() { if (ee) return te; ee = 1; const t = ti(); return te = function (e, i) { let s = String(t(e) || "").split(/\r?\n/); return i ? s.map((t => Math.ceil(t.length / i))).reduce(((t, e) => t + e)) : s.length; }; } function ni() { return he ? oe : (he = 1, oe = { action: Bt ? Jt : (Bt = 1, Jt = (t, e) => { if (!t.meta || "escape" === t.name) { if (t.ctrl) { if ("a" === t.name) return "first"; if ("c" === t.name) return "abort"; if ("d" === t.name) return "abort"; if ("e" === t.name) return "last"; if ("g" === t.name) return "reset"; } if (e) { if ("j" === t.name) return "down"; if ("k" === t.name) return "up"; } return "return" === t.name || "enter" === t.name ? "submit" : "backspace" === t.name ? "delete" : "delete" === t.name ? "deleteForward" : "abort" === t.name ? "abort" : "escape" === t.name ? "exit" : "tab" === t.name ? "next" : "pagedown" === t.name ? "nextPage" : "pageup" === t.name ? "prevPage" : "home" === t.name ? "home" : "end" === t.name ? "end" : "up" === t.name ? "up" : "down" === t.name ? "down" : "right" === t.name ? "right" : "left" === t.name && "left"; } }), clear: ei(), style: si(), strip: ti(), figures: ii(), lines: ri(), wrap: se ? ie : (se = 1, ie = (t, e = {}) => { const i = Number.isSafeInteger(parseInt(e.margin)) ? new Array(parseInt(e.margin)).fill(" ").join("") : e.margin || "", s = e.width; return (t || "").split(/\r?\n/g).map((t => t.split(/\s+/g).reduce(((t, e) => (e.length + i.length >= s || t[t.length - 1].length + e.length + 1 < s ? t[t.length - 1] += ` ${e}` : t.push(`${i}${e}`), t)), [i]).join("\n"))).join("\n"); }), entriesToDisplay: ne ? re : (ne = 1, re = (t, e, i) => { i = i || e; let s = Math.min(e - i, t - Math.floor(i / 2)); return s < 0 && (s = 0), { startIndex: s, endIndex: Math.min(s + i, e) }; }) }); } function oi() { if (ue) return le; ue = 1; const i = t, { action: s } = ni(), r = e, { beep: n, cursor: o } = bt(), h = mt(); return le = class extends r { constructor(t = {}) { super(), this.firstRender = !0, this.in = t.stdin || process.stdin, this.out = t.stdout || process.stdout, this.onRender = (t.onRender || (() => { })).bind(this); const e = i.createInterface({ input: this.in, escapeCodeTimeout: 50 }); i.emitKeypressEvents(this.in, e), this.in.isTTY && this.in.setRawMode(!0); const r = ["SelectPrompt", "MultiselectPrompt"].indexOf(this.constructor.name) > -1, n = (t, e) => { let i = s(e, r); !1 === i ? this._ && this._(t, e) : "function" == typeof this[i] ? this[i](e) : this.bell(); }; this.close = () => { this.out.write(o.show), this.in.removeListener("keypress", n), this.in.isTTY && this.in.setRawMode(!1), e.close(), this.emit(this.aborted ? "abort" : this.exited ? "exit" : "submit", this.value), this.closed = !0; }, this.in.on("keypress", n); } fire() { this.emit("state", { value: this.value, aborted: !!this.aborted, exited: !!this.exited }); } bell() { this.out.write(n); } render() { this.onRender(h), this.firstRender && (this.firstRender = !1); } }; } function hi() { if (de) return ae; de = 1; const t = mt(), e = oi(), { erase: i, cursor: s } = bt(), { style: r, clear: n, lines: o, figures: h } = ni(); return ae = class extends e { constructor(t = {}) { super(t), this.transform = r.render(t.style), this.scale = this.transform.scale, this.msg = t.message, this.initial = t.initial || "", this.validator = t.validate || (() => !0), this.value = "", this.errorMsg = t.error || "Please Enter A Valid Value", this.cursor = Number(!!this.initial), this.cursorOffset = 0, this.clear = n("", this.out.columns), this.render(); } set value(e) { !e && this.initial ? (this.placeholder = !0, this.rendered = t.gray(this.transform.render(this.initial))) : (this.placeholder = !1, this.rendered = this.transform.render(e)), this._value = e, this.fire(); } get value() { return this._value; } reset() { this.value = "", this.cursor = Number(!!this.initial), this.cursorOffset = 0, this.fire(), this.render(); } exit() { this.abort(); } abort() { this.value = this.value || this.initial, this.done = this.aborted = !0, this.error = !1, this.red = !1, this.fire(), this.render(), this.out.write("\n"), this.close(); } async validate() { let t = await this.validator(this.value); "string" == typeof t && (this.errorMsg = t, t = !1), this.error = !t; } async submit() { if (this.value = this.value || this.initial, this.cursorOffset = 0, this.cursor = this.rendered.length, await this.validate(), this.error) return this.red = !0, this.fire(), void this.render(); this.done = !0, this.aborted = !1, this.fire(), this.render(), this.out.write("\n"), this.close(); } next() { if (!this.placeholder) return this.bell(); this.value = this.initial, this.cursor = this.rendered.length, this.fire(), this.render(); } moveCursor(t) { this.placeholder || (this.cursor = this.cursor + t, this.cursorOffset += t); } _(t, e) { let i = this.value.slice(0, this.cursor), s = this.value.slice(this.cursor); this.value = `${i}${t}${s}`, this.red = !1, this.cursor = this.placeholder ? 0 : i.length + 1, this.render(); } delete() { if (this.isCursorAtStart()) return this.bell(); let t = this.value.slice(0, this.cursor - 1), e = this.value.slice(this.cursor); this.value = `${t}${e}`, this.red = !1, this.isCursorAtStart() ? this.cursorOffset = 0 : (this.cursorOffset++, this.moveCursor(-1)), this.render(); } deleteForward() { if (this.cursor * this.scale >= this.rendered.length || this.placeholder) return this.bell(); let t = this.value.slice(0, this.cursor), e = this.value.slice(this.cursor + 1); this.value = `${t}${e}`, this.red = !1, this.isCursorAtEnd() ? this.cursorOffset = 0 : this.cursorOffset++, this.render(); } first() { this.cursor = 0, this.render(); } last() { this.cursor = this.value.length, this.render(); } left() { if (this.cursor <= 0 || this.placeholder) return this.bell(); this.moveCursor(-1), this.render(); } right() { if (this.cursor * this.scale >= this.rendered.length || this.placeholder) return this.bell(); this.moveCursor(1), this.render(); } isCursorAtStart() { return 0 === this.cursor || this.placeholder && 1 === this.cursor; } isCursorAtEnd() { return this.cursor === this.rendered.length || this.placeholder && this.cursor === this.rendered.length + 1; } render() { this.closed || (this.firstRender || (this.outputError && this.out.write(s.down(o(this.outputError, this.out.columns) - 1) + n(this.outputError, this.out.columns)), this.out.write(n(this.outputText, this.out.columns))), super.render(), this.outputError = "", this.outputText = [r.symbol(this.done, this.aborted), t.bold(this.msg), r.delimiter(this.done), this.red ? t.red(this.rendered) : this.rendered].join(" "), this.error && (this.outputError += this.errorMsg.split("\n").reduce(((e, i, s) => e + `\n${s ? " " : h.pointerSmall} ${t.red().italic(i)}`), "")), this.out.write(i.line + s.to(0) + this.outputText + s.save + this.outputError + s.restore + s.move(this.cursorOffset, 0))); } }; } function li() { if (pe) return ce; pe = 1; const t = mt(), e = oi(), { style: i, clear: s, figures: r, wrap: n, entriesToDisplay: o } = ni(), { cursor: h } = bt(); return ce = class extends e { constructor(t = {}) { super(t), this.msg = t.message, this.hint = t.hint || "- Use arrow-keys. Return to submit.", this.warn = t.warn || "- This option is disabled", this.cursor = t.initial || 0, this.choices = t.choices.map(((t, e) => ("string" == typeof t && (t = { title: t, value: e }), { title: t && (t.title || t.value || t), value: t && (void 0 === t.value ? e : t.value), description: t && t.description, selected: t && t.selected, disabled: t && t.disabled }))), this.optionsPerPage = t.optionsPerPage || 10, this.value = (this.choices[this.cursor] || {}).value, this.clear = s("", this.out.columns), this.render(); } moveCursor(t) { this.cursor = t, this.value = this.choices[t].value, this.fire(); } reset() { this.moveCursor(0), this.fire(), this.render(); } exit() { this.abort(); } abort() { this.done = this.aborted = !0, this.fire(), this.render(), this.out.write("\n"), this.close(); } submit() { this.selection.disabled ? this.bell() : (this.done = !0, this.aborted = !1, this.fire(), this.render(), this.out.write("\n"), this.close()); } first() { this.moveCursor(0), this.render(); } last() { this.moveCursor(this.choices.length - 1), this.render(); } up() { 0 === this.cursor ? this.moveCursor(this.choices.length - 1) : this.moveCursor(this.cursor - 1), this.render(); } down() { this.cursor === this.choices.length - 1 ? this.moveCursor(0) : this.moveCursor(this.cursor + 1), this.render(); } next() { this.moveCursor((this.cursor + 1) % this.choices.length), this.render(); } _(t, e) { if (" " === t) return this.submit(); } get selection() { return this.choices[this.cursor]; } render() { if (this.closed) return; this.firstRender ? this.out.write(h.hide) : this.out.write(s(this.outputText, this.out.columns)), super.render(); let { startIndex: e, endIndex: l } = o(this.cursor, this.choices.length, this.optionsPerPage); if (this.outputText = [i.symbol(this.done, this.aborted), t.bold(this.msg), i.delimiter(!1), this.done ? this.selection.title : this.selection.disabled ? t.yellow(this.warn) : t.gray(this.hint)].join(" "), !this.done) { this.outputText += "\n"; for (let i = e; i < l; i++) { let s, o, h = "", u = this.choices[i]; o = i === e && e > 0 ? r.arrowUp : i === l - 1 && l < this.choices.length ? r.arrowDown : " ", u.disabled ? (s = this.cursor === i ? t.gray().underline(u.title) : t.strikethrough().gray(u.title), o = (this.cursor === i ? t.bold().gray(r.pointer) + " " : "  ") + o) : (s = this.cursor === i ? t.cyan().underline(u.title) : u.title, o = (this.cursor === i ? t.cyan(r.pointer) + " " : "  ") + o, u.description && this.cursor === i && (h = ` - ${u.description}`, (o.length + s.length + h.length >= this.out.columns || u.description.split(/\r?\n/).length > 1) && (h = "\n" + n(u.description, { margin: 3, width: this.out.columns })))), this.outputText += `${o} ${s}${t.gray(h)}\n`; } } this.out.write(this.outputText); } }; } function ui() { if (ge) return fe; ge = 1; const t = mt(), e = oi(), { style: i, clear: s } = ni(), { cursor: r, erase: n } = bt(); return fe = class extends e { constructor(t = {}) { super(t), this.msg = t.message, this.value = !!t.initial, this.active = t.active || "on", this.inactive = t.inactive || "off", this.initialValue = this.value, this.render(); } reset() { this.value = this.initialValue, this.fire(), this.render(); } exit() { this.abort(); } abort() { this.done = this.aborted = !0, this.fire(), this.render(), this.out.write("\n"), this.close(); } submit() { this.done = !0, this.aborted = !1, this.fire(), this.render(), this.out.write("\n"), this.close(); } deactivate() { if (!1 === this.value) return this.bell(); this.value = !1, this.render(); } activate() { if (!0 === this.value) return this.bell(); this.value = !0, this.render(); } delete() { this.deactivate(); } left() { this.deactivate(); } right() { this.activate(); } down() { this.deactivate(); } up() { this.activate(); } next() { this.value = !this.value, this.fire(), this.render(); } _(t, e) { if (" " === t) this.value = !this.value; else if ("1" === t) this.value = !0; else { if ("0" !== t) return this.bell(); this.value = !1; } this.render(); } render() { this.closed || (this.firstRender ? this.out.write(r.hide) : this.out.write(s(this.outputText, this.out.columns)), super.render(), this.outputText = [i.symbol(this.done, this.aborted), t.bold(this.msg), i.delimiter(this.done), this.value ? this.inactive : t.cyan().underline(this.inactive), t.gray("/"), this.value ? t.cyan().underline(this.active) : this.active].join(" "), this.out.write(n.line + r.to(0) + this.outputText)); } }; } function ai() { if (ve) return me; ve = 1; class t { constructor({ token: t, date: e, parts: i, locales: s }) { this.token = t, this.date = e || new Date, this.parts = i || [this], this.locales = s || {}; } up() { } down() { } next() { const e = this.parts.indexOf(this); return this.parts.find(((i, s) => s > e && i instanceof t)); } setTo(t) { } prev() { let e = [].concat(this.parts).reverse(); const i = e.indexOf(this); return e.find(((e, s) => s > i && e instanceof t)); } toString() { return String(this.date); } } return me = t; } function di() { if (we) return be; we = 1; const t = ai(); return be = class extends t { constructor(t = {}) { super(t); } up() { this.date.setHours((this.date.getHours() + 12) % 24); } down() { this.up(); } toString() { let t = this.date.getHours() > 12 ? "pm" : "am"; return /\A/.test(this.token) ? t.toUpperCase() : t; } }; } function ci() { if (xe) return ye; xe = 1; const t = ai(); return ye = class extends t { constructor(t = {}) { super(t); } up() { this.date.setDate(this.date.getDate() + 1); } down() { this.date.setDate(this.date.getDate() - 1); } setTo(t) { this.date.setDate(parseInt(t.substr(-2))); } toString() { let t = this.date.getDate(), e = this.date.getDay(); return "DD" === this.token ? String(t).padStart(2, "0") : "Do" === this.token ? t + (i = t, 1 == (i %= 10) ? "st" : 2 === i ? "nd" : 3 === i ? "rd" : "th") : "d" === this.token ? e + 1 : "ddd" === this.token ? this.locales.weekdaysShort[e] : "dddd" === this.token ? this.locales.weekdays[e] : t; var i; } }, ye; } function pi() { if (Me) return Se; Me = 1; const t = ai(); return Se = class extends t { constructor(t = {}) { super(t); } up() { this.date.setHours(this.date.getHours() + 1); } down() { this.date.setHours(this.date.getHours() - 1); } setTo(t) { this.date.setHours(parseInt(t.substr(-2))); } toString() { let t = this.date.getHours(); return /h/.test(this.token) && (t = t % 12 || 12), this.token.length > 1 ? String(t).padStart(2, "0") : t; } }; } function fi() { if (Te) return Oe; Te = 1; const t = ai(); return Oe = class extends t { constructor(t = {}) { super(t); } up() { this.date.setMilliseconds(this.date.getMilliseconds() + 1); } down() { this.date.setMilliseconds(this.date.getMilliseconds() - 1); } setTo(t) { this.date.setMilliseconds(parseInt(t.substr(-this.token.length))); } toString() { return String(this.date.getMilliseconds()).padStart(4, "0").substr(0, this.token.length); } }; } function gi() { if (Pe) return Ce; Pe = 1; const t = ai(); return Ce = class extends t { constructor(t = {}) { super(t); } up() { this.date.setMinutes(this.date.getMinutes() + 1); } down() { this.date.setMinutes(this.date.getMinutes() - 1); } setTo(t) { this.date.setMinutes(parseInt(t.substr(-2))); } toString() { let t = this.date.getMinutes(); return this.token.length > 1 ? String(t).padStart(2, "0") : t; } }; } function mi() { if (ke) return $e; ke = 1; const t = ai(); return $e = class extends t { constructor(t = {}) { super(t); } up() { this.date.setMonth(this.date.getMonth() + 1); } down() { this.date.setMonth(this.date.getMonth() - 1); } setTo(t) { t = parseInt(t.substr(-2)) - 1, this.date.setMonth(t < 0 ? 0 : t); } toString() { let t = this.date.getMonth(), e = this.token.length; return 2 === e ? String(t + 1).padStart(2, "0") : 3 === e ? this.locales.monthsShort[t] : 4 === e ? this.locales.months[t] : String(t + 1); } }; } function vi() { if (Ie) return De; Ie = 1; const t = ai(); return De = class extends t { constructor(t = {}) { super(t); } up() { this.date.setSeconds(this.date.getSeconds() + 1); } down() { this.date.setSeconds(this.date.getSeconds() - 1); } setTo(t) { this.date.setSeconds(parseInt(t.substr(-2))); } toString() { let t = this.date.getSeconds(); return this.token.length > 1 ? String(t).padStart(2, "0") : t; } }; } function bi() { if (Ae) return je; Ae = 1; const t = ai(); return je = class extends t { constructor(t = {}) { super(t); } up() { this.date.setFullYear(this.date.getFullYear() + 1); } down() { this.date.setFullYear(this.date.getFullYear() - 1); } setTo(t) { this.date.setFullYear(t.substr(-4)); } toString() { let t = String(this.date.getFullYear()).padStart(4, "0"); return 2 === this.token.length ? t.substr(-2) : t; } }; } function wi() { if (Fe) return Re; Fe = 1; const t = mt(), e = oi(), { style: i, clear: s, figures: r } = ni(), { erase: n, cursor: o } = bt(), { DatePart: h, Meridiem: l, Day: u, Hours: a, Milliseconds: d, Minutes: c, Month: p, Seconds: f, Year: g } = _e ? Ee : (_e = 1, Ee = { DatePart: ai(), Meridiem: di(), Day: ci(), Hours: pi(), Milliseconds: fi(), Minutes: gi(), Month: mi(), Seconds: vi(), Year: bi() }), m = /\\(.)|"((?:\\["\\]|[^"])+)"|(D[Do]?|d{3,4}|d)|(M{1,4})|(YY(?:YY)?)|([aA])|([Hh]{1,2})|(m{1,2})|(s{1,2})|(S{1,4})|./g, v = { 1: ({ token: t }) => t.replace(/\\(.)/g, "$1"), 2: t => new u(t), 3: t => new p(t), 4: t => new g(t), 5: t => new l(t), 6: t => new a(t), 7: t => new c(t), 8: t => new f(t), 9: t => new d(t) }, b = { months: "January,February,March,April,May,June,July,August,September,October,November,December".split(","), monthsShort: "Jan,Feb,Mar,Apr,May,Jun,Jul,Aug,Sep,Oct,Nov,Dec".split(","), weekdays: "Sunday,Monday,Tuesday,Wednesday,Thursday,Friday,Saturday".split(","), weekdaysShort: "Sun,Mon,Tue,Wed,Thu,Fri,Sat".split(",") }; return Re = class extends e { constructor(t = {}) { super(t), this.msg = t.message, this.cursor = 0, this.typed = "", this.locales = Object.assign(b, t.locales), this._date = t.initial || new Date, this.errorMsg = t.error || "Please Enter A Valid Value", this.validator = t.validate || (() => !0), this.mask = t.mask || "YYYY-MM-DD HH:mm:ss", this.clear = s("", this.out.columns), this.render(); } get value() { return this.date; } get date() { return this._date; } set date(t) { t && this._date.setTime(t.getTime()); } set mask(t) { let e; for (this.parts = []; e = m.exec(t);) { let t = e.shift(), i = e.findIndex((t => null != t)); this.parts.push(i in v ? v[i]({ token: e[i] || t, date: this.date, parts: this.parts, locales: this.locales }) : e[i] || t); } let i = this.parts.reduce(((t, e) => ("string" == typeof e && "string" == typeof t[t.length - 1] ? t[t.length - 1] += e : t.push(e), t)), []); this.parts.splice(0), this.parts.push(...i), this.reset(); } moveCursor(t) { this.typed = "", this.cursor = t, this.fire(); } reset() { this.moveCursor(this.parts.findIndex((t => t instanceof h))), this.fire(), this.render(); } exit() { this.abort(); } abort() { this.done = this.aborted = !0, this.error = !1, this.fire(), this.render(), this.out.write("\n"), this.close(); } async validate() { let t = await this.validator(this.value); "string" == typeof t && (this.errorMsg = t, t = !1), this.error = !t; } async submit() { if (await this.validate(), this.error) return this.color = "red", this.fire(), void this.render(); this.done = !0, this.aborted = !1, this.fire(), this.render(), this.out.write("\n"), this.close(); } up() { this.typed = "", this.parts[this.cursor].up(), this.render(); } down() { this.typed = "", this.parts[this.cursor].down(), this.render(); } left() { let t = this.parts[this.cursor].prev(); if (null == t) return this.bell(); this.moveCursor(this.parts.indexOf(t)), this.render(); } right() { let t = this.parts[this.cursor].next(); if (null == t) return this.bell(); this.moveCursor(this.parts.indexOf(t)), this.render(); } next() { let t = this.parts[this.cursor].next(); this.moveCursor(t ? this.parts.indexOf(t) : this.parts.findIndex((t => t instanceof h))), this.render(); } _(t) { /\d/.test(t) && (this.typed += t, this.parts[this.cursor].setTo(this.typed), this.render()); } render() { this.closed || (this.firstRender ? this.out.write(o.hide) : this.out.write(s(this.outputText, this.out.columns)), super.render(), this.outputText = [i.symbol(this.done, this.aborted), t.bold(this.msg), i.delimiter(!1), this.parts.reduce(((e, i, s) => e.concat(s !== this.cursor || this.done ? i : t.cyan().underline(i.toString()))), []).join("")].join(" "), this.error && (this.outputText += this.errorMsg.split("\n").reduce(((e, i, s) => e + `\n${s ? " " : r.pointerSmall} ${t.red().italic(i)}`), "")), this.out.write(n.line + o.to(0) + this.outputText)); } }; } function yi() { if (Ye) return Ve; Ye = 1; const t = mt(), e = oi(), { cursor: i, erase: s } = bt(), { style: r, figures: n, clear: o, lines: h } = ni(), l = /[0-9]/, u = t => void 0 !== t, a = (t, e) => { let i = Math.pow(10, e); return Math.round(t * i) / i; }; return Ve = class extends e { constructor(t = {}) { super(t), this.transform = r.render(t.style), this.msg = t.message, this.initial = u(t.initial) ? t.initial : "", this.float = !!t.float, this.round = t.round || 2, this.inc = t.increment || 1, this.min = u(t.min) ? t.min : -1 / 0, this.max = u(t.max) ? t.max : 1 / 0, this.errorMsg = t.error || "Please Enter A Valid Value", this.validator = t.validate || (() => !0), this.color = "cyan", this.value = "", this.typed = "", this.lastHit = 0, this.render(); } set value(e) { e || 0 === e ? (this.placeholder = !1, this.rendered = this.transform.render(`${a(e, this.round)}`), this._value = a(e, this.round)) : (this.placeholder = !0, this.rendered = t.gray(this.transform.render(`${this.initial}`)), this._value = ""), this.fire(); } get value() { return this._value; } parse(t) { return this.float ? parseFloat(t) : parseInt(t); } valid(t) { return "-" === t || "." === t && this.float || l.test(t); } reset() { this.typed = "", this.value = "", this.fire(), this.render(); } exit() { this.abort(); } abort() { let t = this.value; this.value = "" !== t ? t : this.initial, this.done = this.aborted = !0, this.error = !1, this.fire(), this.render(), this.out.write("\n"), this.close(); } async validate() { let t = await this.validator(this.value); "string" == typeof t && (this.errorMsg = t, t = !1), this.error = !t; } async submit() { if (await this.validate(), this.error) return this.color = "red", this.fire(), void this.render(); let t = this.value; this.value = "" !== t ? t : this.initial, this.done = !0, this.aborted = !1, this.error = !1, this.fire(), this.render(), this.out.write("\n"), this.close(); } up() { if (this.typed = "", "" === this.value && (this.value = this.min - this.inc), this.value >= this.max) return this.bell(); this.value += this.inc, this.color = "cyan", this.fire(), this.render(); } down() { if (this.typed = "", "" === this.value && (this.value = this.min + this.inc), this.value <= this.min) return this.bell(); this.value -= this.inc, this.color = "cyan", this.fire(), this.render(); } delete() { let t = this.value.toString(); if (0 === t.length) return this.bell(); this.value = this.parse(t = t.slice(0, -1)) || "", "" !== this.value && this.value < this.min && (this.value = this.min), this.color = "cyan", this.fire(), this.render(); } next() { this.value = this.initial, this.fire(), this.render(); } _(t, e) { if (!this.valid(t)) return this.bell(); const i = Date.now(); if (i - this.lastHit > 1e3 && (this.typed = ""), this.typed += t, this.lastHit = i, this.color = "cyan", "." === t) return this.fire(); this.value = Math.min(this.parse(this.typed), this.max), this.value > this.max && (this.value = this.max), this.value < this.min && (this.value = this.min), this.fire(), this.render(); } render() { this.closed || (this.firstRender || (this.outputError && this.out.write(i.down(h(this.outputError, this.out.columns) - 1) + o(this.outputError, this.out.columns)), this.out.write(o(this.outputText, this.out.columns))), super.render(), this.outputError = "", this.outputText = [r.symbol(this.done, this.aborted), t.bold(this.msg), r.delimiter(this.done), this.done && (this.done || this.placeholder) ? this.rendered : t[this.color]().underline(this.rendered)].join(" "), this.error && (this.outputError += this.errorMsg.split("\n").reduce(((e, i, s) => e + `\n${s ? " " : n.pointerSmall} ${t.red().italic(i)}`), "")), this.out.write(s.line + i.to(0) + this.outputText + i.save + this.outputError + i.restore)); } }; } function xi() { if (Le) return He; Le = 1; const t = mt(), { cursor: e } = bt(), i = oi(), { clear: s, figures: r, style: n, wrap: o, entriesToDisplay: h } = ni(); return He = class extends i { constructor(t = {}) { super(t), this.msg = t.message, this.cursor = t.cursor || 0, this.scrollIndex = t.cursor || 0, this.hint = t.hint || "", this.warn = t.warn || "- This option is disabled -", this.minSelected = t.min, this.showMinError = !1, this.maxChoices = t.max, this.instructions = t.instructions, this.optionsPerPage = t.optionsPerPage || 10, this.value = t.choices.map(((t, e) => ("string" == typeof t && (t = { title: t, value: e }), { title: t && (t.title || t.value || t), description: t && t.description, value: t && (void 0 === t.value ? e : t.value), selected: t && t.selected, disabled: t && t.disabled }))), this.clear = s("", this.out.columns), t.overrideRender || this.render(); } reset() { this.value.map((t => !t.selected)), this.cursor = 0, this.fire(), this.render(); } selected() { return this.value.filter((t => t.selected)); } exit() { this.abort(); } abort() { this.done = this.aborted = !0, this.fire(), this.render(), this.out.write("\n"), this.close(); } submit() { const t = this.value.filter((t => t.selected)); this.minSelected && t.length < this.minSelected ? (this.showMinError = !0, this.render()) : (this.done = !0, this.aborted = !1, this.fire(), this.render(), this.out.write("\n"), this.close()); } first() { this.cursor = 0, this.render(); } last() { this.cursor = this.value.length - 1, this.render(); } next() { this.cursor = (this.cursor + 1) % this.value.length, this.render(); } up() { 0 === this.cursor ? this.cursor = this.value.length - 1 : this.cursor--, this.render(); } down() { this.cursor === this.value.length - 1 ? this.cursor = 0 : this.cursor++, this.render(); } left() { this.value[this.cursor].selected = !1, this.render(); } right() { if (this.value.filter((t => t.selected)).length >= this.maxChoices) return this.bell(); this.value[this.cursor].selected = !0, this.render(); } handleSpaceToggle() { const t = this.value[this.cursor]; if (t.selected) t.selected = !1, this.render(); else { if (t.disabled || this.value.filter((t => t.selected)).length >= this.maxChoices) return this.bell(); t.selected = !0, this.render(); } } toggleAll() { if (void 0 !== this.maxChoices || this.value[this.cursor].disabled) return this.bell(); const t = !this.value[this.cursor].selected; this.value.filter((t => !t.disabled)).forEach((e => e.selected = t)), this.render(); } _(t, e) { if (" " === t) this.handleSpaceToggle(); else { if ("a" !== t) return this.bell(); this.toggleAll(); } } renderInstructions() { return void 0 === this.instructions || this.instructions ? "string" == typeof this.instructions ? this.instructions : `\nInstructions:\n    ${r.arrowUp}/${r.arrowDown}: Highlight option\n    ${r.arrowLeft}/${r.arrowRight}/[space]: Toggle selection\n` + (void 0 === this.maxChoices ? "    a: Toggle all\n" : "") + "    enter/return: Complete answer" : ""; } renderOption(e, i, s, n) { const h = (i.selected ? t.green(r.radioOn) : r.radioOff) + " " + n + " "; let l, u; return i.disabled ? l = e === s ? t.gray().underline(i.title) : t.strikethrough().gray(i.title) : (l = e === s ? t.cyan().underline(i.title) : i.title, e === s && i.description && (u = ` - ${i.description}`, (h.length + l.length + u.length >= this.out.columns || i.description.split(/\r?\n/).length > 1) && (u = "\n" + o(i.description, { margin: h.length, width: this.out.columns })))), h + l + t.gray(u || ""); } paginateOptions(e) { if (0 === e.length) return t.red("No matches for this query."); let i, { startIndex: s, endIndex: n } = h(this.cursor, e.length, this.optionsPerPage), o = []; for (let t = s; t < n; t++)i = t === s && s > 0 ? r.arrowUp : t === n - 1 && n < e.length ? r.arrowDown : " ", o.push(this.renderOption(this.cursor, e[t], t, i)); return "\n" + o.join("\n"); } renderOptions(t) { return this.done ? "" : this.paginateOptions(t); } renderDoneOrInstructions() { if (this.done) return this.value.filter((t => t.selected)).map((t => t.title)).join(", "); const e = [t.gray(this.hint), this.renderInstructions()]; return this.value[this.cursor].disabled && e.push(t.yellow(this.warn)), e.join(" "); } render() { if (this.closed) return; this.firstRender && this.out.write(e.hide), super.render(); let i = [n.symbol(this.done, this.aborted), t.bold(this.msg), n.delimiter(!1), this.renderDoneOrInstructions()].join(" "); this.showMinError && (i += t.red(`You must select a minimum of ${this.minSelected} choices.`), this.showMinError = !1), i += this.renderOptions(this.value), this.out.write(this.clear + i), this.clear = s(i, this.out.columns); } }, He; } function Si() { if (Ue) return Ne; Ue = 1; const t = mt(), e = oi(), { erase: i, cursor: s } = bt(), { style: r, clear: n, figures: o, wrap: h, entriesToDisplay: l } = ni(), u = (t, e) => t[e] && (t[e].value || t[e].title || t[e]), a = (t, e) => t[e] && (t[e].title || t[e].value || t[e]); return Ne = class extends e { constructor(t = {}) { super(t), this.msg = t.message, this.suggest = t.suggest, this.choices = t.choices, this.initial = "number" == typeof t.initial ? t.initial : ((t, e) => { const i = t.findIndex((t => t.value === e || t.title === e)); return i > -1 ? i : void 0; })(t.choices, t.initial), this.select = this.initial || t.cursor || 0, this.i18n = { noMatches: t.noMatches || "no matches found" }, this.fallback = t.fallback || this.initial, this.clearFirst = t.clearFirst || !1, this.suggestions = [], this.input = "", this.limit = t.limit || 10, this.cursor = 0, this.transform = r.render(t.style), this.scale = this.transform.scale, this.render = this.render.bind(this), this.complete = this.complete.bind(this), this.clear = n("", this.out.columns), this.complete(this.render), this.render(); } set fallback(t) { this._fb = Number.isSafeInteger(parseInt(t)) ? parseInt(t) : t; } get fallback() { let t; return "number" == typeof this._fb ? t = this.choices[this._fb] : "string" == typeof this._fb && (t = { title: this._fb }), t || this._fb || { title: this.i18n.noMatches }; } moveSelect(t) { this.select = t, this.suggestions.length > 0 ? this.value = u(this.suggestions, t) : this.value = this.fallback.value, this.fire(); } async complete(t) { const e = this.completing = this.suggest(this.input, this.choices), i = await e; if (this.completing !== e) return; this.suggestions = i.map(((t, e, i) => ({ title: a(i, e), value: u(i, e), description: t.description }))), this.completing = !1; const s = Math.max(i.length - 1, 0); this.moveSelect(Math.min(s, this.select)), t && t(); } reset() { this.input = "", this.complete((() => { this.moveSelect(void 0 !== this.initial ? this.initial : 0), this.render(); })), this.render(); } exit() { this.clearFirst && this.input.length > 0 ? this.reset() : (this.done = this.exited = !0, this.aborted = !1, this.fire(), this.render(), this.out.write("\n"), this.close()); } abort() { this.done = this.aborted = !0, this.exited = !1, this.fire(), this.render(), this.out.write("\n"), this.close(); } submit() { this.done = !0, this.aborted = this.exited = !1, this.fire(), this.render(), this.out.write("\n"), this.close(); } _(t, e) { let i = this.input.slice(0, this.cursor), s = this.input.slice(this.cursor); this.input = `${i}${t}${s}`, this.cursor = i.length + 1, this.complete(this.render), this.render(); } delete() { if (0 === this.cursor) return this.bell(); let t = this.input.slice(0, this.cursor - 1), e = this.input.slice(this.cursor); this.input = `${t}${e}`, this.complete(this.render), this.cursor = this.cursor - 1, this.render(); } deleteForward() { if (this.cursor * this.scale >= this.rendered.length) return this.bell(); let t = this.input.slice(0, this.cursor), e = this.input.slice(this.cursor + 1); this.input = `${t}${e}`, this.complete(this.render), this.render(); } first() { this.moveSelect(0), this.render(); } last() { this.moveSelect(this.suggestions.length - 1), this.render(); } up() { 0 === this.select ? this.moveSelect(this.suggestions.length - 1) : this.moveSelect(this.select - 1), this.render(); } down() { this.select === this.suggestions.length - 1 ? this.moveSelect(0) : this.moveSelect(this.select + 1), this.render(); } next() { this.select === this.suggestions.length - 1 ? this.moveSelect(0) : this.moveSelect(this.select + 1), this.render(); } nextPage() { this.moveSelect(Math.min(this.select + this.limit, this.suggestions.length - 1)), this.render(); } prevPage() { this.moveSelect(Math.max(this.select - this.limit, 0)), this.render(); } left() { if (this.cursor <= 0) return this.bell(); this.cursor = this.cursor - 1, this.render(); } right() { if (this.cursor * this.scale >= this.rendered.length) return this.bell(); this.cursor = this.cursor + 1, this.render(); } renderOption(e, i, s, r) { let n, l = s ? o.arrowUp : r ? o.arrowDown : " ", u = i ? t.cyan().underline(e.title) : e.title; return l = (i ? t.cyan(o.pointer) + " " : "  ") + l, e.description && (n = ` - ${e.description}`, (l.length + u.length + n.length >= this.out.columns || e.description.split(/\r?\n/).length > 1) && (n = "\n" + h(e.description, { margin: 3, width: this.out.columns }))), l + " " + u + t.gray(n || ""); } render() { if (this.closed) return; this.firstRender ? this.out.write(s.hide) : this.out.write(n(this.outputText, this.out.columns)), super.render(); let { startIndex: e, endIndex: o } = l(this.select, this.choices.length, this.limit); if (this.outputText = [r.symbol(this.done, this.aborted, this.exited), t.bold(this.msg), r.delimiter(this.completing), this.done && this.suggestions[this.select] ? this.suggestions[this.select].title : this.rendered = this.transform.render(this.input)].join(" "), !this.done) { const i = this.suggestions.slice(e, o).map(((t, i) => this.renderOption(t, this.select === i + e, 0 === i && e > 0, i + e === o - 1 && o < this.choices.length))).join("\n"); this.outputText += "\n" + (i || t.gray(this.fallback.title)); } this.out.write(i.line + s.to(0) + this.outputText); } }; } function Mi() { if (Be) return Je; Be = 1; const t = mt(), { cursor: e } = bt(), i = xi(), { clear: s, style: r, figures: n } = ni(); return Je = class extends i { constructor(t = {}) { t.overrideRender = !0, super(t), this.inputValue = "", this.clear = s("", this.out.columns), this.filteredOptions = this.value, this.render(); } last() { this.cursor = this.filteredOptions.length - 1, this.render(); } next() { this.cursor = (this.cursor + 1) % this.filteredOptions.length, this.render(); } up() { 0 === this.cursor ? this.cursor = this.filteredOptions.length - 1 : this.cursor--, this.render(); } down() { this.cursor === this.filteredOptions.length - 1 ? this.cursor = 0 : this.cursor++, this.render(); } left() { this.filteredOptions[this.cursor].selected = !1, this.render(); } right() { if (this.value.filter((t => t.selected)).length >= this.maxChoices) return this.bell(); this.filteredOptions[this.cursor].selected = !0, this.render(); } delete() { this.inputValue.length && (this.inputValue = this.inputValue.substr(0, this.inputValue.length - 1), this.updateFilteredOptions()); } updateFilteredOptions() { const t = this.filteredOptions[this.cursor]; this.filteredOptions = this.value.filter((t => !this.inputValue || (!("string" != typeof t.title || !t.title.toLowerCase().includes(this.inputValue.toLowerCase())) || !("string" != typeof t.value || !t.value.toLowerCase().includes(this.inputValue.toLowerCase()))))); const e = this.filteredOptions.findIndex((e => e === t)); this.cursor = e < 0 ? 0 : e, this.render(); } handleSpaceToggle() { const t = this.filteredOptions[this.cursor]; if (t.selected) t.selected = !1, this.render(); else { if (t.disabled || this.value.filter((t => t.selected)).length >= this.maxChoices) return this.bell(); t.selected = !0, this.render(); } } handleInputChange(t) { this.inputValue = this.inputValue + t, this.updateFilteredOptions(); } _(t, e) { " " === t ? this.handleSpaceToggle() : this.handleInputChange(t); } renderInstructions() { return void 0 === this.instructions || this.instructions ? "string" == typeof this.instructions ? this.instructions : `\n\tInstructions:\n\t    ${n.arrowUp}/${n.arrowDown}: Highlight option\n\t    ${n.arrowLeft}/${n.arrowRight}/[space]: Toggle selection\n\t    [a,b,c]/delete: Filter choices\n\t    enter/return: Complete answer\n\t` : ""; } renderCurrentInput() { return `\n\tFiltered results for: ${this.inputValue ? this.inputValue : t.gray("Enter something to filter")}\n`; } renderOption(e, i, s) { let r; return r = i.disabled ? e === s ? t.gray().underline(i.title) : t.strikethrough().gray(i.title) : e === s ? t.cyan().underline(i.title) : i.title, (i.selected ? t.green(n.radioOn) : n.radioOff) + "  " + r; } renderDoneOrInstructions() { if (this.done) return this.value.filter((t => t.selected)).map((t => t.title)).join(", "); const e = [t.gray(this.hint), this.renderInstructions(), this.renderCurrentInput()]; return this.filteredOptions.length && this.filteredOptions[this.cursor].disabled && e.push(t.yellow(this.warn)), e.join(" "); } render() { if (this.closed) return; this.firstRender && this.out.write(e.hide), super.render(); let i = [r.symbol(this.done, this.aborted), t.bold(this.msg), r.delimiter(!1), this.renderDoneOrInstructions()].join(" "); this.showMinError && (i += t.red(`You must select a minimum of ${this.minSelected} choices.`), this.showMinError = !1), i += this.renderOptions(this.filteredOptions), this.out.write(this.clear + i), this.clear = s(i, this.out.columns); } }, Je; } function Oi() { if (We) return ze; We = 1; const t = mt(), e = oi(), { style: i, clear: s } = ni(), { erase: r, cursor: n } = bt(); return ze = class extends e { constructor(t = {}) { super(t), this.msg = t.message, this.value = t.initial, this.initialValue = !!t.initial, this.yesMsg = t.yes || "yes", this.yesOption = t.yesOption || "(Y/n)", this.noMsg = t.no || "no", this.noOption = t.noOption || "(y/N)", this.render(); } reset() { this.value = this.initialValue, this.fire(), this.render(); } exit() { this.abort(); } abort() { this.done = this.aborted = !0, this.fire(), this.render(), this.out.write("\n"), this.close(); } submit() { this.value = this.value || !1, this.done = !0, this.aborted = !1, this.fire(), this.render(), this.out.write("\n"), this.close(); } _(t, e) { return "y" === t.toLowerCase() ? (this.value = !0, this.submit()) : "n" === t.toLowerCase() ? (this.value = !1, this.submit()) : this.bell(); } render() { this.closed || (this.firstRender ? this.out.write(n.hide) : this.out.write(s(this.outputText, this.out.columns)), super.render(), this.outputText = [i.symbol(this.done, this.aborted), t.bold(this.msg), i.delimiter(this.done), this.done ? this.value ? this.yesMsg : this.noMsg : t.gray(this.initialValue ? this.yesOption : this.noOption)].join(" "), this.out.write(r.line + n.to(0) + this.outputText)); } }; } function Ti() { return Ge || (Ge = 1, function (t) { const e = Xe, i = qe ? Ze : (qe = 1, Ze = { TextPrompt: hi(), SelectPrompt: li(), TogglePrompt: ui(), DatePrompt: wi(), NumberPrompt: yi(), MultiselectPrompt: xi(), AutocompletePrompt: Si(), AutocompleteMultiselectPrompt: Mi(), ConfirmPrompt: Oi() }), s = t => t; function r(t, e, r = {}) { return new Promise(((n, o) => { const h = new i[t](e), l = r.onAbort || s, u = r.onSubmit || s, a = r.onExit || s; h.on("state", e.onState || s), h.on("submit", (t => n(u(t)))), h.on("exit", (t => n(a(t)))), h.on("abort", (t => o(l(t)))); })); } e.text = t => r("TextPrompt", t), e.password = t => (t.style = "password", e.text(t)), e.invisible = t => (t.style = "invisible", e.text(t)), e.number = t => r("NumberPrompt", t), e.date = t => r("DatePrompt", t), e.confirm = t => r("ConfirmPrompt", t), e.list = t => { const e = t.separator || ","; return r("TextPrompt", t, { onSubmit: t => t.split(e).map((t => t.trim())) }); }, e.toggle = t => r("TogglePrompt", t), e.select = t => r("SelectPrompt", t), e.multiselect = t => { t.choices = [].concat(t.choices || []); const e = t => t.filter((t => t.selected)).map((t => t.value)); return r("MultiselectPrompt", t, { onAbort: e, onSubmit: e }); }, e.autocompleteMultiselect = t => { t.choices = [].concat(t.choices || []); const e = t => t.filter((t => t.selected)).map((t => t.value)); return r("AutocompleteMultiselectPrompt", t, { onAbort: e, onSubmit: e }); }; const n = (t, e) => Promise.resolve(e.filter((e => e.title.slice(0, t.length).toLowerCase() === t.toLowerCase()))); e.autocomplete = t => (t.suggest = t.suggest || n, t.choices = [].concat(t.choices || []), r("AutocompletePrompt", t)); }()), Xe; } var Ci = function (t) { t = (Array.isArray(t) ? t : t.split(".")).map(Number); let e = 0, i = process.versions.node.split(".").map(Number); for (; e < t.length; e++) { if (i[e] > t[e]) return !1; if (t[e] > i[e]) return !0; } return !1; }("8.6.0") ? function () { if (ft) return pt; function t(t, e) { var i = Object.keys(t); if (Object.getOwnPropertySymbols) { var s = Object.getOwnPropertySymbols(t); e && (s = s.filter((function (e) { return Object.getOwnPropertyDescriptor(t, e).enumerable; }))), i.push.apply(i, s); } return i; } function e(e) { for (var s = 1; s < arguments.length; s++) { var r = null != arguments[s] ? arguments[s] : {}; s % 2 ? t(Object(r), !0).forEach((function (t) { i(e, t, r[t]); })) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(r)) : t(Object(r)).forEach((function (t) { Object.defineProperty(e, t, Object.getOwnPropertyDescriptor(r, t)); })); } return e; } function i(t, e, i) { return e in t ? Object.defineProperty(t, e, { value: i, enumerable: !0, configurable: !0, writable: !0 }) : t[e] = i, t; } function s(t, e) { var i = "undefined" != typeof Symbol && t[Symbol.iterator] || t["@@iterator"]; if (!i) { if (Array.isArray(t) || (i = function (t, e) { if (!t) return; if ("string" == typeof t) return r(t, e); var i = Object.prototype.toString.call(t).slice(8, -1); "Object" === i && t.constructor && (i = t.constructor.name); if ("Map" === i || "Set" === i) return Array.from(t); if ("Arguments" === i || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(i)) return r(t, e); }(t)) || e && t && "number" == typeof t.length) { i && (t = i); var s = 0, n = function () { }; return { s: n, n: function () { return s >= t.length ? { done: !0 } : { done: !1, value: t[s++] }; }, e: function (t) { throw t; }, f: n }; } throw new TypeError("Invalid attempt to iterate non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method."); } var o, h = !0, l = !1; return { s: function () { i = i.call(t); }, n: function () { var t = i.next(); return h = t.done, t; }, e: function (t) { l = !0, o = t; }, f: function () { try { h || null == i.return || i.return(); } finally { if (l) throw o; } } }; } function r(t, e) { (null == e || e > t.length) && (e = t.length); for (var i = 0, s = new Array(e); i < e; i++)s[i] = t[i]; return s; } function n(t, e, i, s, r, n, o) { try { var h = t[n](o), l = h.value; } catch (t) { return void i(t); } h.done ? e(l) : Promise.resolve(l).then(s, r); } function o(t) { return function () { var e = this, i = arguments; return new Promise((function (s, r) { var o = t.apply(e, i); function h(t) { n(o, s, r, h, l, "next", t); } function l(t) { n(o, s, r, h, l, "throw", t); } h(void 0); })); }; } ft = 1; const h = Ut(), l = ["suggest", "format", "onState", "validate", "onRender", "type"], u = () => { }; function a() { return d.apply(this, arguments); } function d() { return d = o((function* (t = [], { onSubmit: i = u, onCancel: r = u } = {}) { const n = {}, d = a._override || {}; let p, f, g, m, v, b; t = [].concat(t); const w = function () { var t = o((function* (t, e, i = !1) { if (i || !t.validate || !0 === t.validate(e)) return t.format ? yield t.format(e, n) : e; })); return function (e, i) { return t.apply(this, arguments); }; }(); var y, x = s(t); try { for (x.s(); !(y = x.n()).done;) { f = y.value; var S = f; if (m = S.name, v = S.type, "function" == typeof v && (v = yield v(p, e({}, n), f), f.type = v), v) { for (let t in f) { if (l.includes(t)) continue; let i = f[t]; f[t] = "function" == typeof i ? yield i(p, e({}, n), b) : i; } if (b = f, "string" != typeof f.message) throw new Error("prompt message is required"); var M = f; if (m = M.name, v = M.type, void 0 === h[v]) throw new Error(`prompt type (${v}) is not defined`); if (void 0 === d[f.name] || (p = yield w(f, d[f.name]), void 0 === p)) { try { p = a._injected ? c(a._injected, f.initial) : yield h[v](f), n[m] = p = yield w(f, p, !0), g = yield i(f, p, n); } catch (t) { g = !(yield r(f, n)); } if (g) return n; } else n[m] = p; } } } catch (t) { x.e(t); } finally { x.f(); } return n; })), d.apply(this, arguments); } function c(t, e) { const i = t.shift(); if (i instanceof Error) throw i; return void 0 === i ? e : i; } return pt = Object.assign(a, { prompt: a, prompts: h, inject: function (t) { a._injected = (a._injected || []).concat(t); }, override: function (t) { a._override = Object.assign({}, t); } }); }() : function () { if (Qe) return Ke; Qe = 1; const t = Ti(), e = ["suggest", "format", "onState", "validate", "onRender", "type"], i = () => { }; async function s(n = [], { onSubmit: o = i, onCancel: h = i } = {}) { const l = {}, u = s._override || {}; let a, d, c, p, f, g; n = [].concat(n); const m = async (t, e, i = !1) => { if (i || !t.validate || !0 === t.validate(e)) return t.format ? await t.format(e, l) : e; }; for (d of n) if (({ name: p, type: f } = d), "function" == typeof f && (f = await f(a, { ...l }, d), d.type = f), f) { for (let t in d) { if (e.includes(t)) continue; let i = d[t]; d[t] = "function" == typeof i ? await i(a, { ...l }, g) : i; } if (g = d, "string" != typeof d.message) throw new Error("prompt message is required"); if (({ name: p, type: f } = d), void 0 === t[f]) throw new Error(`prompt type (${f}) is not defined`); if (void 0 === u[d.name] || (a = await m(d, u[d.name]), void 0 === a)) { try { a = s._injected ? r(s._injected, d.initial) : await t[f](d), l[p] = a = await m(d, a, !0), c = await o(d, a, l); } catch (t) { c = !await h(d, l); } if (c) return l; } else l[p] = a; } return l; } function r(t, e) { const i = t.shift(); if (i instanceof Error) throw i; return void 0 === i ? e : i; } return Ke = Object.assign(s, { prompt: s, prompts: t, inject: function (t) { s._injected = (s._injected || []).concat(t); }, override: function (t) { s._override = Object.assign({}, t); } }); }(); let Pi, $i; const ki = { onCancel: () => process.exit(1) }, Di = await Ci([{ type: "select", name: "template", message: "Project type?", choices: [{ title: "Svelte", value: 0 }, { title: "Sveltekit", value: 1 }] }, { type: "toggle", name: "typescript", message: "Use Typescript?", initial: !0, active: "yes", inactive: "no" }, { type: "toggle", name: "scss", message: "Use SCSS?", initial: !0, active: "yes", inactive: "no" }], ki); 1 === Di.template && (Pi = await Ci({ type: "select", name: "platform", message: "Deployment platform?", choices: [{ title: "Static", value: 0 }, { title: "AWS Cloud Functions", value: 1 }, { title: "Vercel", value: 2 }, { title: "Netlify", value: 3 }, { title: "Node", value: 4 }, { title: "Custom", value: 5 }] }, ki)), 0 !== Di.template && 0 !== Pi?.platform || ($i = await Ci({ type: "toggle", name: "pages", message: "Deploy to GitHub Pages workflow?", initial: !0, active: "yes", inactive: "no" }, ki)), console.log(Di, Pi, $i);
